// –ê–Ω–∏–º–∞—Ü–∏—è –æ—Ç–∫—Ä—ã—Ç–∏—è –∫–µ–π—Å–∞
import { generateCasePrize } from './prizeGenerator.js';

class CaseAnimation {
    constructor() {
        this.isAnimating = false;
        this.animationDuration = 3000; // 3 —Å–µ–∫—É–Ω–¥—ã
        this.scrollSpeed = 160; // –ø–∏–∫—Å–µ–ª–µ–π –∑–∞ —à–∞–≥
        this.currentPosition = 0;
        this.targetPosition = 0;
        this.prizeStrip = null;
        this.prizes = [];
        this.selectedPrize = null;
    }

    /**
     * –ó–∞–ø—É—Å–∫ –∞–Ω–∏–º–∞—Ü–∏–∏ –æ—Ç–∫—Ä—ã—Ç–∏—è –∫–µ–π—Å–∞
     * @param {string} caseType - –¢–∏–ø –∫–µ–π—Å–∞
     * @param {Function} onComplete - Callback –ø—Ä–∏ –∑–∞–≤–µ—Ä—à–µ–Ω–∏–∏
     */
    async startAnimation(caseType, onComplete) {
        if (this.isAnimating) {
            console.warn('–ê–Ω–∏–º–∞—Ü–∏—è —É–∂–µ –∑–∞–ø—É—â–µ–Ω–∞');
            return;
        }

        this.isAnimating = true;
        this.prizeStrip = document.getElementById('prize-strip');
        
        if (!this.prizeStrip) {
            console.error('–≠–ª–µ–º–µ–Ω—Ç prize-strip –Ω–µ –Ω–∞–π–¥–µ–Ω');
            this.isAnimating = false;
            return;
        }

        try {
            // –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º –ø—Ä–∏–∑—ã –¥–ª—è –ø–æ–ª–æ—Å–∫–∏
            await this.generatePrizes(caseType);
            
            // –ó–∞–ø—É—Å–∫–∞–µ–º –∞–Ω–∏–º–∞—Ü–∏—é –ø—Ä–æ–∫—Ä—É—Ç–∫–∏
            await this.startScrolling();
            
            // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç
            this.showResult();
            
            // –í—ã–∑—ã–≤–∞–µ–º callback
            if (onComplete) {
                onComplete(this.selectedPrize);
            }

        } catch (error) {
            console.error('–û—à–∏–±–∫–∞ –∞–Ω–∏–º–∞—Ü–∏–∏:', error);
        } finally {
            this.isAnimating = false;
        }
    }

    /**
     * –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –ø—Ä–∏–∑–æ–≤ –¥–ª—è –ø–æ–ª–æ—Å–∫–∏
     * @param {string} caseType - –¢–∏–ø –∫–µ–π—Å–∞
     */
    async generatePrizes(caseType) {
        this.prizes = [];
        
        // –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º –º–Ω–æ–≥–æ –ø—Ä–∏–∑–æ–≤ –¥–ª—è –ø–æ–ª–æ—Å–∫–∏ (–º–∏–Ω–∏–º—É–º 50)
        const totalPrizes = 50;
        
        for (let i = 0; i < totalPrizes; i++) {
            const prize = generateCasePrize(caseType);
            this.prizes.push(prize);
        }

        // –í—ã–±–∏—Ä–∞–µ–º —Å–ª—É—á–∞–π–Ω—ã–π –ø—Ä–∏–∑ –∏–∑ —Å–µ—Ä–µ–¥–∏–Ω—ã (—á—Ç–æ–±—ã –∞–Ω–∏–º–∞—Ü–∏—è –≤—ã–≥–ª—è–¥–µ–ª–∞ –µ—Å—Ç–µ—Å—Ç–≤–µ–Ω–Ω–æ)
        const middleIndex = Math.floor(totalPrizes / 2);
        const randomOffset = Math.floor(Math.random() * 10) - 5; // ¬±5 –ø—Ä–∏–∑–æ–≤ –æ—Ç —Ü–µ–Ω—Ç—Ä–∞
        this.selectedPrize = this.prizes[middleIndex + randomOffset];

        // –ó–∞–º–µ–Ω—è–µ–º –≤—ã–±—Ä–∞–Ω–Ω—ã–π –ø—Ä–∏–∑ –Ω–∞ —Ñ–∏–Ω–∞–ª—å–Ω—ã–π
        this.prizes[middleIndex + randomOffset] = this.selectedPrize;

        // –û—á–∏—â–∞–µ–º –ø–æ–ª–æ—Å–∫—É –∏ –¥–æ–±–∞–≤–ª—è–µ–º –ø—Ä–∏–∑—ã
        this.prizeStrip.innerHTML = '';
        this.prizes.forEach((prize, index) => {
            const prizeElement = this.createPrizeElement(prize, index);
            this.prizeStrip.appendChild(prizeElement);
        });

        // –í—ã—á–∏—Å–ª—è–µ–º —Ü–µ–ª–µ–≤—É—é –ø–æ–∑–∏—Ü–∏—é (–≤—ã–±—Ä–∞–Ω–Ω—ã–π –ø—Ä–∏–∑ –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –≤ —Ü–µ–Ω—Ç—Ä–µ)
        this.targetPosition = -(middleIndex + randomOffset) * this.scrollSpeed;
    }

    /**
     * –°–æ–∑–¥–∞–Ω–∏–µ —ç–ª–µ–º–µ–Ω—Ç–∞ –ø—Ä–∏–∑–∞
     * @param {Object} prize - –î–∞–Ω–Ω—ã–µ –ø—Ä–∏–∑–∞
     * @param {number} index - –ò–Ω–¥–µ–∫—Å –ø—Ä–∏–∑–∞
     * @returns {HTMLElement} - DOM —ç–ª–µ–º–µ–Ω—Ç –ø—Ä–∏–∑–∞
     */
    createPrizeElement(prize, index) {
        const prizeElement = document.createElement('div');
        prizeElement.className = `prize-item ${prize.rarity}`;
        prizeElement.innerHTML = `
            <div class="prize-item-icon">${this.getPrizeIcon(prize)}</div>
            <div class="prize-item-name">${prize.name}</div>
        `;
        return prizeElement;
    }

    /**
     * –ü–æ–ª—É—á–µ–Ω–∏–µ –∏–∫–æ–Ω–∫–∏ –ø—Ä–∏–∑–∞
     * @param {Object} prize - –î–∞–Ω–Ω—ã–µ –ø—Ä–∏–∑–∞
     * @returns {string} - –ò–∫–æ–Ω–∫–∞
     */
    getPrizeIcon(prize) {
        const icons = {
            sticker: 'üìÑ',
            gift: 'üéÅ',
            premium: '‚≠ê',
            stars: 'üí´'
        };
        return icons[prize.type] || '‚ùì';
    }

    /**
     * –ó–∞–ø—É—Å–∫ –∞–Ω–∏–º–∞—Ü–∏–∏ –ø—Ä–æ–∫—Ä—É—Ç–∫–∏
     */
    async startScrolling() {
        return new Promise((resolve) => {
            // –ù–∞—á–∏–Ω–∞–µ–º —Å –±—ã—Å—Ç—Ä–æ–π –ø—Ä–æ–∫—Ä—É—Ç–∫–∏
            this.startFastScrolling();
            
            // –ß–µ—Ä–µ–∑ 2 —Å–µ–∫—É–Ω–¥—ã –Ω–∞—á–∏–Ω–∞–µ–º –∑–∞–º–µ–¥–ª–µ–Ω–∏–µ
            setTimeout(() => {
                this.startSlowing();
            }, 2000);
            
            // –ß–µ—Ä–µ–∑ 3 —Å–µ–∫—É–Ω–¥—ã –æ—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º—Å—è
            setTimeout(() => {
                this.stopAtTarget();
                resolve();
            }, this.animationDuration);
        });
    }

    /**
     * –ë—ã—Å—Ç—Ä–∞—è –ø—Ä–æ–∫—Ä—É—Ç–∫–∞
     */
    startFastScrolling() {
        this.prizeStrip.classList.add('scrolling');
        this.prizeStrip.style.animationDuration = '0.08s';
    }

    /**
     * –ó–∞–º–µ–¥–ª–µ–Ω–∏–µ –ø—Ä–æ–∫—Ä—É—Ç–∫–∏
     */
    startSlowing() {
        this.prizeStrip.classList.remove('scrolling');
        this.prizeStrip.classList.add('slowing');
        
        // –ü–ª–∞–≤–Ω–æ –ø–µ—Ä–µ–º–µ—â–∞–µ–º –∫ —Ü–µ–ª–µ–≤–æ–π –ø–æ–∑–∏—Ü–∏–∏
        this.prizeStrip.style.transition = 'transform 1s cubic-bezier(0.25, 0.46, 0.45, 0.94)';
        this.prizeStrip.style.transform = `translateX(${this.targetPosition}px)`;
    }

    /**
     * –û—Å—Ç–∞–Ω–æ–≤–∫–∞ –Ω–∞ —Ü–µ–ª–µ–≤–æ–º –ø—Ä–∏–∑–µ
     */
    stopAtTarget() {
        this.prizeStrip.classList.remove('scrolling', 'slowing');
        this.prizeStrip.style.transition = 'none';
        this.prizeStrip.style.transform = `translateX(${this.targetPosition}px)`;
        
        // –ü–æ–¥—Å–≤–µ—á–∏–≤–∞–µ–º –≤—ã–±—Ä–∞–Ω–Ω—ã–π –ø—Ä–∏–∑
        this.highlightSelectedPrize();
    }

    /**
     * –ü–æ–¥—Å–≤–µ—Ç–∫–∞ –≤—ã–±—Ä–∞–Ω–Ω–æ–≥–æ –ø—Ä–∏–∑–∞
     */
    highlightSelectedPrize() {
        const prizeElements = this.prizeStrip.querySelectorAll('.prize-item');
        const middleIndex = Math.floor(prizeElements.length / 2);
        
        // –£–±–∏—Ä–∞–µ–º –ø–æ–¥—Å–≤–µ—Ç–∫—É —Å–æ –≤—Å–µ—Ö –ø—Ä–∏–∑–æ–≤
        prizeElements.forEach(el => el.classList.remove('selected'));
        
        // –ü–æ–¥—Å–≤–µ—á–∏–≤–∞–µ–º —Ü–µ–Ω—Ç—Ä–∞–ª—å–Ω—ã–π –ø—Ä–∏–∑
        if (prizeElements[middleIndex]) {
            prizeElements[middleIndex].classList.add('selected');
        }
    }

    /**
     * –ü–æ–∫–∞–∑ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞
     */
    showResult() {
        // –ê–∫—Ç–∏–≤–∏—Ä—É–µ–º —ç—Ñ—Ñ–µ–∫—Ç—ã
        this.activateEffects();
        
        // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∞–Ω–∏–º–∞—Ü–∏—é –ø–æ—è–≤–ª–µ–Ω–∏—è –ø—Ä–∏–∑–∞
        this.showPrizeReveal();
    }

    /**
     * –ê–∫—Ç–∏–≤–∞—Ü–∏—è —ç—Ñ—Ñ–µ–∫—Ç–æ–≤
     */
    activateEffects() {
        // –ê–∫—Ç–∏–≤–∏—Ä—É–µ–º –ª—É—á–∏ —Å–≤–µ—Ç–∞
        const lightRays = document.querySelector('.light-rays');
        if (lightRays) {
            lightRays.classList.add('active');
        }

        // –ê–∫—Ç–∏–≤–∏—Ä—É–µ–º –≤–∑—Ä—ã–≤
        const explosion = document.getElementById('explosion-effect');
        if (explosion) {
            explosion.classList.add('active');
        }

        // –ê–∫—Ç–∏–≤–∏—Ä—É–µ–º –≤—Å–ø—ã—à–∫—É
        const flash = document.getElementById('light-flash');
        if (flash) {
            flash.classList.add('active');
        }

        // –ê–∫—Ç–∏–≤–∏—Ä—É–µ–º –¥—ã–º
        const smoke = document.getElementById('smoke-effect');
        if (smoke) {
            smoke.classList.add('active');
        }
    }

    /**
     * –ü–æ–∫–∞–∑ –∞–Ω–∏–º–∞—Ü–∏–∏ –ø–æ—è–≤–ª–µ–Ω–∏—è –ø—Ä–∏–∑–∞
     */
    showPrizeReveal() {
        const prizeReveal = document.getElementById('prize-reveal');
        if (!prizeReveal || !this.selectedPrize) return;

        // –ó–∞–ø–æ–ª–Ω—è–µ–º –¥–∞–Ω–Ω—ã–µ –ø—Ä–∏–∑–∞
        const iconElement = document.getElementById('prize-icon');
        const nameElement = document.getElementById('prize-name');
        const descriptionElement = document.getElementById('prize-description');
        const rarityElement = document.getElementById('prize-rarity');

        if (iconElement) iconElement.textContent = this.getPrizeIcon(this.selectedPrize);
        if (nameElement) nameElement.textContent = this.selectedPrize.name;
        if (descriptionElement) descriptionElement.textContent = this.selectedPrize.description || '';
        if (rarityElement) {
            rarityElement.textContent = this.getRarityName(this.selectedPrize.rarity);
            rarityElement.className = `prize-rarity ${this.selectedPrize.rarity}`;
        }

        // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∞–Ω–∏–º–∞—Ü–∏—é
        prizeReveal.classList.add('show');
    }

    /**
     * –ü–æ–ª—É—á–µ–Ω–∏–µ –Ω–∞–∑–≤–∞–Ω–∏—è —Ä–µ–¥–∫–æ—Å—Ç–∏
     * @param {string} rarity - –†–µ–¥–∫–æ—Å—Ç—å
     * @returns {string} - –ù–∞–∑–≤–∞–Ω–∏–µ
     */
    getRarityName(rarity) {
        const names = {
            common: '–û–±—ã—á–Ω—ã–π',
            rare: '–†–µ–¥–∫–∏–π',
            epic: '–≠–ø–∏—á–µ—Å–∫–∏–π',
            legendary: '–õ–µ–≥–µ–Ω–¥–∞—Ä–Ω—ã–π'
        };
        return names[rarity] || '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ';
    }

    /**
     * –°–±—Ä–æ—Å –∞–Ω–∏–º–∞—Ü–∏–∏
     */
    reset() {
        this.isAnimating = false;
        this.currentPosition = 0;
        this.targetPosition = 0;
        this.prizes = [];
        this.selectedPrize = null;

        if (this.prizeStrip) {
            this.prizeStrip.classList.remove('scrolling', 'slowing');
            this.prizeStrip.style.transition = '';
            this.prizeStrip.style.transform = '';
            this.prizeStrip.innerHTML = '';
        }

        // –°–∫—Ä—ã–≤–∞–µ–º —ç—Ñ—Ñ–µ–∫—Ç—ã
        const lightRays = document.querySelector('.light-rays');
        if (lightRays) lightRays.classList.remove('active');

        const explosion = document.getElementById('explosion-effect');
        if (explosion) explosion.classList.remove('active');

        const flash = document.getElementById('light-flash');
        if (flash) flash.classList.remove('active');

        const smoke = document.getElementById('smoke-effect');
        if (smoke) smoke.classList.remove('active');

        // –°–∫—Ä—ã–≤–∞–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç
        const prizeReveal = document.getElementById('prize-reveal');
        if (prizeReveal) prizeReveal.classList.remove('show');
    }

    /**
     * –ü—Ä–æ–≤–µ—Ä–∫–∞, –∑–∞–ø—É—â–µ–Ω–∞ –ª–∏ –∞–Ω–∏–º–∞—Ü–∏—è
     * @returns {boolean} - –°—Ç–∞—Ç—É—Å –∞–Ω–∏–º–∞—Ü–∏–∏
     */
    isRunning() {
        return this.isAnimating;
    }
}

export const caseAnimation = new CaseAnimation();
