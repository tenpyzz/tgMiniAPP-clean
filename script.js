// Telegram WebApp API
const tg = window.Telegram.WebApp;

// –ì–ª–æ–±–∞–ª—å–Ω—ã–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ
let userStars = 100; // –ù–∞—á–∞–ª—å–Ω—ã–π –±–∞–ª–∞–Ω—Å –∑–≤–µ–∑–¥
let userInventory = []; // –ò–Ω–≤–µ–Ω—Ç–∞—Ä—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
let isOpening = false; // –§–ª–∞–≥ –æ—Ç–∫—Ä—ã—Ç–∏—è –∫–µ–π—Å–∞

// –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –∫–µ–π—Å–æ–≤
const caseConfig = {
    bronze: {
        price: 10,
        prizes: [
            { type: 'gift', name: '–°–µ—Ä–¥–µ—á–∫–æ', icon: '‚ù§Ô∏è', description: '–ü–æ–¥–∞—Ä–æ–∫ —Å–µ—Ä–¥–µ—á–∫–æ', telegram_gift_id: 'heart_1' },
            { type: 'gift', name: '–ó–≤–µ–∑–¥–æ—á–∫–∞', icon: '‚≠ê', description: '–ü–æ–¥–∞—Ä–æ–∫ –∑–≤–µ–∑–¥–æ—á–∫–∞', telegram_gift_id: 'star_1' },
            { type: 'gift', name: '–¶–≤–µ—Ç–æ–∫', icon: 'üå∏', description: '–ü–æ–¥–∞—Ä–æ–∫ —Ü–≤–µ—Ç–æ–∫', telegram_gift_id: 'flower_1' },
            { type: 'gift', name: '–¢–æ—Ä—Ç', icon: 'üéÇ', description: '–†–µ–¥–∫–∏–π —Ç–æ—Ä—Ç', telegram_gift_id: 'cake_1' }
        ]
    },
    silver: {
        price: 25,
        prizes: [
            { type: 'gift', name: '–°–µ—Ä–¥–µ—á–∫–æ', icon: '‚ù§Ô∏è', description: '–ü–æ–¥–∞—Ä–æ–∫ —Å–µ—Ä–¥–µ—á–∫–æ', telegram_gift_id: 'heart_1' },
            { type: 'gift', name: '–ó–≤–µ–∑–¥–æ—á–∫–∞', icon: '‚≠ê', description: '–ü–æ–¥–∞—Ä–æ–∫ –∑–≤–µ–∑–¥–æ—á–∫–∞', telegram_gift_id: 'star_1' },
            { type: 'gift', name: '–¶–≤–µ—Ç–æ–∫', icon: 'üå∏', description: '–ü–æ–¥–∞—Ä–æ–∫ —Ü–≤–µ—Ç–æ–∫', telegram_gift_id: 'flower_1' },
            { type: 'gift', name: '–¢–æ—Ä—Ç', icon: 'üéÇ', description: '–†–µ–¥–∫–∏–π —Ç–æ—Ä—Ç', telegram_gift_id: 'cake_1' },
            { type: 'sticker', name: '–ö–æ—Ç', icon: 'üê±', description: '–°—Ç–∏–∫–µ—Ä –∫–æ—Ç–∞', telegram_sticker_id: 'cat_1' },
            { type: 'sticker', name: '–°–æ–±–∞–∫–∞', icon: 'üê∂', description: '–°—Ç–∏–∫–µ—Ä —Å–æ–±–∞–∫–∏', telegram_sticker_id: 'dog_1' }
        ]
    },
    gold: {
        price: 50,
        prizes: [
            { type: 'premium', name: 'Telegram Premium', icon: 'üëë', description: '–ü—Ä–µ–º–∏—É–º –ø–æ–¥–ø–∏—Å–∫–∞ –Ω–∞ 1 –º–µ—Å—è—Ü', premium_duration: 30 },
            { type: 'gift', name: '–ö–æ—Ä–æ–ª–µ–≤—Å–∫–∏–π –ø–æ–¥–∞—Ä–æ–∫', icon: 'üéÅ', description: '–≠–∫—Å–∫–ª—é–∑–∏–≤–Ω—ã–π –ø–æ–¥–∞—Ä–æ–∫', telegram_gift_id: 'royal_1' },
            { type: 'sticker', name: '–ü—Ä–µ–º–∏—É–º —Å—Ç–∏–∫–µ—Ä', icon: '‚ú®', description: '–°—Ç–∏–∫–µ—Ä –ø—Ä–µ–º–∏—É–º –∫–∞—á–µ—Å—Ç–≤–∞', telegram_sticker_id: 'premium_1' }
        ]
    },
    diamond: {
        price: 100,
        prizes: [
            { type: 'premium', name: 'Telegram Premium', icon: 'üëë', description: '–ü—Ä–µ–º–∏—É–º –ø–æ–¥–ø–∏—Å–∫–∞ –Ω–∞ 3 –º–µ—Å—è—Ü–∞', premium_duration: 90 },
            { type: 'gift', name: '–ê–ª–º–∞–∑–Ω—ã–π –ø–æ–¥–∞—Ä–æ–∫', icon: 'üíé', description: '–£–Ω–∏–∫–∞–ª—å–Ω—ã–π –∞–ª–º–∞–∑–Ω—ã–π –ø–æ–¥–∞—Ä–æ–∫', telegram_gift_id: 'diamond_1' },
            { type: 'sticker', name: '–≠–∫—Å–∫–ª—é–∑–∏–≤–Ω—ã–π —Å—Ç–∏–∫–µ—Ä', icon: 'üåü', description: '–≠–∫—Å–∫–ª—é–∑–∏–≤–Ω—ã–π —Å—Ç–∏–∫–µ—Ä', telegram_sticker_id: 'exclusive_1' }
        ]
    }
};

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
document.addEventListener('DOMContentLoaded', function() {
    console.log('–ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –∑–∞–≥—Ä—É–∂–µ–Ω–æ');
    
    // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è Telegram WebApp
    if (tg) {
        tg.ready();
        tg.expand();
        
        // –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏–∑ Telegram
        const user = tg.initDataUnsafe?.user;
        if (user) {
            console.log('–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å:', user);
            // –ú–æ–∂–Ω–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å user.id –¥–ª—è –∏–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏
        }
    }
    
    // –ó–∞–≥—Ä—É–∂–∞–µ–º —Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ
    loadUserData();
    
    // –û–±–Ω–æ–≤–ª—è–µ–º –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ
    updateStarsDisplay();
    updateInventoryDisplay();
    
    // –î–æ–±–∞–≤–ª—è–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ —Å–æ–±—ã—Ç–∏–π
    setupEventListeners();
    
    // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ –∑–∞–≥—Ä—É–∑–∫–µ
    showNotification('–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –ö–µ–π—Å –ú–∞—Å—Ç–µ—Ä!', 'success');
});

// –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤ —Å–æ–±—ã—Ç–∏–π
function setupEventListeners() {
    // –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –¥–ª—è –∫–µ–π—Å–æ–≤
    document.querySelectorAll('.case-item').forEach(item => {
        item.addEventListener('click', function() {
            const caseType = this.dataset.case;
            const price = parseInt(this.dataset.price);
            openCase(caseType, price);
        });
    });
    
    // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –∫–Ω–æ–ø–∫–∏ –ø–æ–∫—É–ø–∫–∏ –∑–≤–µ–∑–¥
    document.getElementById('buy-stars-btn').addEventListener('click', function() {
        buyStars();
    });
    
    // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –∑–∞–∫—Ä—ã—Ç–∏—è –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞
    document.getElementById('close-modal').addEventListener('click', function() {
        closePrizeModal();
    });
    
    // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –∫–Ω–æ–ø–∫–∏ "–ó–∞–±—Ä–∞—Ç—å –ø—Ä–∏–∑"
    document.getElementById('claim-prize-btn').addEventListener('click', function() {
        claimPrize();
    });
}

// –û—Ç–∫—Ä—ã—Ç–∏–µ –∫–µ–π—Å–∞
async function openCase(caseType, price) {
    if (isOpening) return;
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –±–∞–ª–∞–Ω—Å
    if (userStars < price) {
        showNotification('–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –∑–≤–µ–∑–¥!', 'error');
        return;
    }
    
    isOpening = true;
    
    // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∞–Ω–∏–º–∞—Ü–∏—é –∑–∞–≥—Ä—É–∑–∫–∏
    showLoadingOverlay();
    
    // –°–ø–∏—Å—ã–≤–∞–µ–º –∑–≤–µ–∑–¥—ã
    userStars -= price;
    updateStarsDisplay();
    
    // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∞–Ω–∏–º–∞—Ü–∏—é –æ—Ç–∫—Ä—ã—Ç–∏—è –∫–µ–π—Å–∞
    await showCaseOpeningAnimation(caseType);
    
    // –ü–æ–ª—É—á–∞–µ–º –ø—Ä–∏–∑
    const prize = getRandomPrize(caseType);
    
    // –î–æ–±–∞–≤–ª—è–µ–º –ø—Ä–∏–∑ –≤ –∏–Ω–≤–µ–Ω—Ç–∞—Ä—å
    userInventory.push(prize);
    
    // –°–æ—Ö—Ä–∞–Ω—è–µ–º –¥–∞–Ω–Ω—ã–µ
    saveUserData();
    
    // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø—Ä–∏–∑
    showPrize(prize);
    
    // –°–∫—Ä—ã–≤–∞–µ–º –∞–Ω–∏–º–∞—Ü–∏—é –∑–∞–≥—Ä—É–∑–∫–∏
    hideLoadingOverlay();
    
    isOpening = false;
}

// –ê–Ω–∏–º–∞—Ü–∏—è –æ—Ç–∫—Ä—ã—Ç–∏—è –∫–µ–π—Å–∞
async function showCaseOpeningAnimation(caseType) {
    const openingArea = document.getElementById('opening-area');
    const caseBox = document.getElementById('case-box');
    const sparkles = document.getElementById('sparkles');
    
    // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –æ–±–ª–∞—Å—Ç—å –∞–Ω–∏–º–∞—Ü–∏–∏
    openingArea.style.display = 'block';
    
    // –ê–Ω–∏–º–∞—Ü–∏—è —Ç—Ä—è—Å–∫–∏ –∫–µ–π—Å–∞
    caseBox.style.animation = 'caseShake 0.5s ease-in-out infinite';
    
    // –°–æ–∑–¥–∞–µ–º –∏—Å–∫—Ä—ã
    createSparkles(sparkles);
    
    // –ñ–¥–µ–º 2 —Å–µ–∫—É–Ω–¥—ã
    await new Promise(resolve => setTimeout(resolve, 2000));
    
    // –û—Ç–∫—Ä—ã–≤–∞–µ–º –∫–µ–π—Å
    caseBox.classList.add('opening');
    
    // –ñ–¥–µ–º –µ—â–µ 1 —Å–µ–∫—É–Ω–¥—É
    await new Promise(resolve => setTimeout(resolve, 1000));
}

// –°–æ–∑–¥–∞–Ω–∏–µ –∏—Å–∫—Ä
function createSparkles(container) {
    container.innerHTML = '';
    
    for (let i = 0; i < 20; i++) {
        const sparkle = document.createElement('div');
        sparkle.className = 'sparkle';
        sparkle.style.left = Math.random() * 100 + '%';
        sparkle.style.top = Math.random() * 100 + '%';
        sparkle.style.animationDelay = Math.random() * 0.5 + 's';
        container.appendChild(sparkle);
    }
}

// –ü–æ–ª—É—á–µ–Ω–∏–µ —Å–ª—É—á–∞–π–Ω–æ–≥–æ –ø—Ä–∏–∑–∞
function getRandomPrize(caseType) {
    const config = caseConfig[caseType];
    const prizes = config.prizes;
    
    // –ü—Ä–æ—Å—Ç–∞—è —Å–∏—Å—Ç–µ–º–∞ –≤–µ—Ä–æ—è—Ç–Ω–æ—Å—Ç–µ–π
    const random = Math.random();
    let prize;
    
    if (random < 0.1) {
        // 10% —à–∞–Ω—Å –Ω–∞ —Ä–µ–¥–∫–∏–π –ø—Ä–∏–∑ (–ø–æ—Å–ª–µ–¥–Ω–∏–π –≤ —Å–ø–∏—Å–∫–µ)
        prize = prizes[prizes.length - 1];
    } else if (random < 0.3) {
        // 20% —à–∞–Ω—Å –Ω–∞ —Ö–æ—Ä–æ—à–∏–π –ø—Ä–∏–∑ (–ø—Ä–µ–¥–ø–æ—Å–ª–µ–¥–Ω–∏–π)
        prize = prizes[prizes.length - 2] || prizes[0];
    } else {
        // 70% —à–∞–Ω—Å –Ω–∞ –æ–±—ã—á–Ω—ã–π –ø—Ä–∏–∑ (–ø–µ—Ä–≤—ã–π)
        prize = prizes[0];
    }
    
    // –î–æ–±–∞–≤–ª—è–µ–º —É–Ω–∏–∫–∞–ª—å–Ω—ã–π ID
    prize.id = Date.now() + Math.random();
    prize.claimed = false;
    
    return prize;
}

// –ü–æ–∫–∞–∑ –ø—Ä–∏–∑–∞
function showPrize(prize) {
    const prizeReveal = document.getElementById('prize-reveal');
    const prizeIcon = document.getElementById('prize-icon');
    const prizeName = document.getElementById('prize-name');
    const prizeDescription = document.getElementById('prize-description');
    
    // –ó–∞–ø–æ–ª–Ω—è–µ–º –¥–∞–Ω–Ω—ã–µ –ø—Ä–∏–∑–∞
    prizeIcon.textContent = prize.icon;
    prizeName.textContent = prize.name;
    prizeDescription.textContent = prize.description;
    
    // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∞–Ω–∏–º–∞—Ü–∏—é
    prizeReveal.classList.add('show');
    
    // –ß–µ—Ä–µ–∑ 2 —Å–µ–∫—É–Ω–¥—ã –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ
    setTimeout(() => {
        showPrizeModal(prize);
    }, 2000);
}

// –ü–æ–∫–∞–∑ –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞ —Å –ø—Ä–∏–∑–æ–º
function showPrizeModal(prize) {
    const modal = document.getElementById('prize-modal');
    const modalPrizeIcon = document.getElementById('modal-prize-icon');
    const modalPrizeName = document.getElementById('modal-prize-name');
    const modalPrizeDescription = document.getElementById('modal-prize-description');
    
    // –ó–∞–ø–æ–ª–Ω—è–µ–º –¥–∞–Ω–Ω—ã–µ
    modalPrizeIcon.textContent = prize.icon;
    modalPrizeName.textContent = prize.name;
    modalPrizeDescription.textContent = prize.description;
    
    // –°–æ—Ö—Ä–∞–Ω—è–µ–º –ø—Ä–∏–∑ –¥–ª—è –∫–Ω–æ–ø–∫–∏ "–ó–∞–±—Ä–∞—Ç—å"
    modal.dataset.prize = JSON.stringify(prize);
    
    // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ
    modal.classList.add('show');
}

// –ó–∞–∫—Ä—ã—Ç–∏–µ –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞
function closePrizeModal() {
    const modal = document.getElementById('prize-modal');
    modal.classList.remove('show');
    
    // –°–∫—Ä—ã–≤–∞–µ–º –æ–±–ª–∞—Å—Ç—å –∞–Ω–∏–º–∞—Ü–∏–∏
    const openingArea = document.getElementById('opening-area');
    openingArea.style.display = 'none';
    
    // –°–±—Ä–∞—Å—ã–≤–∞–µ–º –∞–Ω–∏–º–∞—Ü–∏—é –∫–µ–π—Å–∞
    const caseBox = document.getElementById('case-box');
    caseBox.classList.remove('opening');
    caseBox.style.animation = '';
    
    // –°–∫—Ä—ã–≤–∞–µ–º –ø–æ–∫–∞–∑ –ø—Ä–∏–∑–∞
    const prizeReveal = document.getElementById('prize-reveal');
    prizeReveal.classList.remove('show');
}

// –ó–∞–±—Ä–∞—Ç—å –ø—Ä–∏–∑
async function claimPrize() {
    const modal = document.getElementById('prize-modal');
    const prize = JSON.parse(modal.dataset.prize);
    
    try {
        // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∑–∞–ø—Ä–æ—Å –Ω–∞ —Å–µ—Ä–≤–µ—Ä –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –ø—Ä–∏–∑–∞
        const response = await fetch('/api/prize/claim', {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json',
            },
            body: JSON.stringify({
                user_id: tg?.initDataUnsafe?.user?.id || 'test_user',
                prize: prize
            })
        });
        
        if (response.ok) {
            // –û—Ç–º–µ—á–∞–µ–º –ø—Ä–∏–∑ –∫–∞–∫ –ø–æ–ª—É—á–µ–Ω–Ω—ã–π
            prize.claimed = true;
            
            // –û–±–Ω–æ–≤–ª—è–µ–º –∏–Ω–≤–µ–Ω—Ç–∞—Ä—å
            updateInventoryDisplay();
            
            // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ
            showNotification('–ü—Ä–∏–∑ –ø–æ–ª—É—á–µ–Ω!', 'success');
            
            // –ó–∞–∫—Ä—ã–≤–∞–µ–º –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ
            closePrizeModal();
        } else {
            throw new Error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –ø—Ä–∏–∑–∞');
        }
    } catch (error) {
        console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –ø—Ä–∏–∑–∞:', error);
        showNotification('–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –ø—Ä–∏–∑–∞', 'error');
    }
}

// –ü–æ–∫—É–ø–∫–∞ –∑–≤–µ–∑–¥
function buyStars() {
    if (tg && tg.showPopup) {
        // –í —Ä–µ–∞–ª—å–Ω–æ–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–∏ –∑–¥–µ—Å—å –±—É–¥–µ—Ç –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è —Å Telegram Stars
        tg.showPopup({
            title: '–ü–æ–∫—É–ø–∫–∞ –∑–≤–µ–∑–¥',
            message: '–§—É–Ω–∫—Ü–∏—è –ø–æ–∫—É–ø–∫–∏ –∑–≤–µ–∑–¥ –±—É–¥–µ—Ç –¥–æ—Å—Ç—É–ø–Ω–∞ –≤ –ø–æ–ª–Ω–æ–π –≤–µ—Ä—Å–∏–∏ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è',
            buttons: [
                { id: 'ok', text: 'OK', type: 'ok' }
            ]
        });
    } else {
        // –î–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –¥–æ–±–∞–≤–ª—è–µ–º –∑–≤–µ–∑–¥—ã
        userStars += 100;
        updateStarsDisplay();
        showNotification('–î–æ–±–∞–≤–ª–µ–Ω–æ 100 –∑–≤–µ–∑–¥ (—Ç–µ—Å—Ç–æ–≤—ã–π —Ä–µ–∂–∏–º)', 'success');
    }
}

// –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –∑–≤–µ–∑–¥
function updateStarsDisplay() {
    const starsCount = document.getElementById('stars-count');
    if (starsCount) {
        starsCount.textContent = userStars;
    }
}

// –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –∏–Ω–≤–µ–Ω—Ç–∞—Ä—è
function updateInventoryDisplay() {
    const inventoryGrid = document.getElementById('inventory-grid');
    if (!inventoryGrid) return;
    
    inventoryGrid.innerHTML = '';
    
    if (userInventory.length === 0) {
        inventoryGrid.innerHTML = '<p style="text-align: center; color: white; grid-column: 1 / -1;">–ò–Ω–≤–µ–Ω—Ç–∞—Ä—å –ø—É—Å—Ç</p>';
        return;
    }
    
    userInventory.forEach(prize => {
        const item = document.createElement('div');
        item.className = 'inventory-item';
        item.innerHTML = `
            <div class="prize-icon">${prize.icon}</div>
            <div class="prize-name">${prize.name}</div>
            <div class="prize-description">${prize.description}</div>
        `;
        inventoryGrid.appendChild(item);
    });
}

// –ü–æ–∫–∞–∑ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è
function showNotification(message, type = 'info') {
    // –£–¥–∞–ª—è–µ–º –ø—Ä–µ–¥—ã–¥—É—â–∏–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è
    const existingNotifications = document.querySelectorAll('.notification');
    existingNotifications.forEach(notification => notification.remove());
    
    // –°–æ–∑–¥–∞–µ–º –Ω–æ–≤–æ–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ
    const notification = document.createElement('div');
    notification.className = `notification ${type}`;
    notification.textContent = message;
    
    document.body.appendChild(notification);
    
    // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ
    setTimeout(() => {
        notification.classList.add('show');
    }, 100);
    
    // –°–∫—Ä—ã–≤–∞–µ–º —á–µ—Ä–µ–∑ 3 —Å–µ–∫—É–Ω–¥—ã
    setTimeout(() => {
        notification.classList.remove('show');
        setTimeout(() => {
            notification.remove();
        }, 300);
    }, 3000);
}

// –ü–æ–∫–∞–∑ –∞–Ω–∏–º–∞—Ü–∏–∏ –∑–∞–≥—Ä—É–∑–∫–∏
function showLoadingOverlay() {
    const overlay = document.getElementById('loading-overlay');
    if (overlay) {
        overlay.classList.add('show');
    }
}

// –°–∫—Ä—ã—Ç–∏–µ –∞–Ω–∏–º–∞—Ü–∏–∏ –∑–∞–≥—Ä—É–∑–∫–∏
function hideLoadingOverlay() {
    const overlay = document.getElementById('loading-overlay');
    if (overlay) {
        overlay.classList.remove('show');
    }
}

// –ó–∞–≥—Ä—É–∑–∫–∞ –¥–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
async function loadUserData() {
    try {
        const response = await fetch('/api/user/data', {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json',
            },
            body: JSON.stringify({
                user_id: tg?.initDataUnsafe?.user?.id || 'test_user',
                init_data: tg?.initData || 'test_data'
            })
        });
        
        if (response.ok) {
            const data = await response.json();
            userStars = data.stars_balance || 100;
            userInventory = data.inventory || [];
        }
    } catch (error) {
        console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ –¥–∞–Ω–Ω—ã—Ö:', error);
        // –ò—Å–ø–æ–ª—å–∑—É–µ–º –∑–Ω–∞—á–µ–Ω–∏—è –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é
        userStars = 100;
        userInventory = [];
    }
}

// –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
async function saveUserData() {
    try {
        const response = await fetch('/api/user/save', {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json',
            },
            body: JSON.stringify({
                user_id: tg?.initDataUnsafe?.user?.id || 'test_user',
                stars_balance: userStars,
                inventory: userInventory,
                init_data: tg?.initData || 'test_data'
            })
        });
        
        if (!response.ok) {
            throw new Error('–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–∏ –¥–∞–Ω–Ω—ã—Ö');
        }
    } catch (error) {
        console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–∏ –¥–∞–Ω–Ω—ã—Ö:', error);
    }
}

// –≠–∫—Å–ø–æ—Ä—Ç —Ñ—É–Ω–∫—Ü–∏–π –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
window.userStars = userStars;
window.userInventory = userInventory;
window.openCase = openCase;
window.addStars = function(amount) {
    userStars += amount;
    updateStarsDisplay();
    showNotification(`–î–æ–±–∞–≤–ª–µ–Ω–æ ${amount} –∑–≤–µ–∑–¥!`, 'success');
};
window.clearInventory = function() {
    userInventory = [];
    updateInventoryDisplay();
    showNotification('–ò–Ω–≤–µ–Ω—Ç–∞—Ä—å –æ—á–∏—â–µ–Ω!', 'info');
};
window.showNotification = showNotification;
