// Telegram Mini App - –û—Å–Ω–æ–≤–Ω–æ–π —Ñ–∞–π–ª
console.log('üöÄ –ó–∞–≥—Ä—É–∂–∞–µ—Ç—Å—è Telegram Mini App...');

// –ì–ª–æ–±–∞–ª—å–Ω—ã–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ
let userStars = 0;
let userInventory = [];
let isOpening = false;
let currentUserId = null;
let currentTab = 'cases';

// Telegram WebApp API
const tg = window.Telegram?.WebApp;

// –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è
const CONFIG = {
    API_BASE_URL: window.location.origin,
    ADMIN_USER_ID: '1165123437',
    DEFAULT_STAR_BALANCE: 100,
    CASE_TYPES: {
        ultimate: {
            name: '–£–Ω–∏–∫–∞–ª—å–Ω—ã–π –ö–µ–π—Å',
            price: 50,
            description: '–í—Å–µ –ø—Ä–∏–∑—ã –≤ –æ–¥–Ω–æ–º –∫–µ–π—Å–µ!'
        }
    },
    PRIZES: {
        common: [
            { name: '–û–±—ã—á–Ω—ã–π —Å—Ç–∏–∫–µ—Ä', type: 'sticker', rarity: 'common', value: 1 },
            { name: '–ü—Ä–æ—Å—Ç–æ–π –ø–æ–¥–∞—Ä–æ–∫', type: 'gift', rarity: 'common', value: 5 }
        ],
        rare: [
            { name: '–†–µ–¥–∫–∏–π —Å—Ç–∏–∫–µ—Ä', type: 'sticker', rarity: 'rare', value: 10 },
            { name: '–ö—Ä—É—Ç–æ–π –ø–æ–¥–∞—Ä–æ–∫', type: 'gift', rarity: 'rare', value: 25 }
        ],
        epic: [
            { name: '–≠–ø–∏—á–µ—Å–∫–∏–π —Å—Ç–∏–∫–µ—Ä', type: 'sticker', rarity: 'epic', value: 50 },
            { name: '–ü—Ä–µ–º–∏—É–º –ø–æ–¥–∞—Ä–æ–∫', type: 'gift', rarity: 'epic', value: 100 }
        ],
        legendary: [
            { name: '–õ–µ–≥–µ–Ω–¥–∞—Ä–Ω—ã–π —Å—Ç–∏–∫–µ—Ä', type: 'sticker', rarity: 'legendary', value: 200 },
            { name: '–ê–ª–º–∞–∑–Ω—ã–π –ø–æ–¥–∞—Ä–æ–∫', type: 'gift', rarity: 'legendary', value: 500 },
            { name: 'Telegram Premium', type: 'premium', rarity: 'legendary', value: 1000, duration: 30 }
        ]
    }
};

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è userId
function getUserId() {
    // –°–Ω–∞—á–∞–ª–∞ –ø—ã—Ç–∞–µ–º—Å—è –ø–æ–ª—É—á–∏—Ç—å –∏–∑ Telegram WebApp
    if (tg?.initDataUnsafe?.user?.id) {
        const telegramUserId = tg.initDataUnsafe.user.id.toString();
        localStorage.setItem('telegram_user_id', telegramUserId);
        console.log('‚úÖ –ü–æ–ª—É—á–µ–Ω userId –æ—Ç Telegram:', telegramUserId);
        return telegramUserId;
    }
    
    // –ï—Å–ª–∏ –Ω–µ –ø–æ–ª—É—á–∏–ª–æ—Å—å, –ø—ã—Ç–∞–µ–º—Å—è –ø–æ–ª—É—á–∏—Ç—å –∏–∑ initData
    if (tg?.initData) {
        try {
            const urlParams = new URLSearchParams(tg.initData);
            const userParam = urlParams.get('user');
            if (userParam) {
                const userData = JSON.parse(decodeURIComponent(userParam));
                if (userData.id) {
                    const telegramUserId = userData.id.toString();
                    localStorage.setItem('telegram_user_id', telegramUserId);
                    console.log('‚úÖ –ü–æ–ª—É—á–µ–Ω userId –∏–∑ initData:', telegramUserId);
                    return telegramUserId;
                }
            }
        } catch (e) {
            console.log('–û—à–∏–±–∫–∞ –ø–∞—Ä—Å–∏–Ω–≥–∞ initData:', e);
        }
    }
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω—ã–π userId –≤ localStorage
    const savedUserId = localStorage.getItem('telegram_user_id');
    if (savedUserId) {
        console.log('üîÑ –ò—Å–ø–æ–ª—å–∑—É–µ–º —Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω—ã–π userId –∏–∑ localStorage:', savedUserId);
        return savedUserId;
    }
    
    // –ï—Å–ª–∏ –Ω–∏—á–µ–≥–æ –Ω–µ –ø–æ–ª—É—á–∏–ª–æ—Å—å, –≥–µ–Ω–µ—Ä–∏—Ä—É–µ–º —É–Ω–∏–∫–∞–ª—å–Ω—ã–π ID
    const fallbackId = 'user_' + Date.now() + '_' + Math.random().toString(36).substr(2, 9);
    console.log('‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å userId –æ—Ç Telegram, –∏—Å–ø–æ–ª—å–∑—É–µ–º fallback:', fallbackId);
    localStorage.setItem('telegram_user_id', fallbackId);
    return fallbackId;
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –∏–º–µ–Ω–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
function getUserName() {
    if (tg?.initDataUnsafe?.user?.first_name) {
        const telegramUserName = tg.initDataUnsafe.user.first_name;
        localStorage.setItem('telegram_user_name', telegramUserName);
        console.log('‚úÖ –ü–æ–ª—É—á–µ–Ω–æ –∏–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –æ—Ç Telegram:', telegramUserName);
        return telegramUserName;
    }
    
    if (tg?.initData) {
        try {
            const urlParams = new URLSearchParams(tg.initData);
            const userParam = urlParams.get('user');
            if (userParam) {
                const userData = JSON.parse(decodeURIComponent(userParam));
                if (userData.first_name) {
                    const telegramUserName = userData.first_name;
                    localStorage.setItem('telegram_user_name', telegramUserName);
                    console.log('‚úÖ –ü–æ–ª—É—á–µ–Ω–æ –∏–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏–∑ initData:', telegramUserName);
                    return telegramUserName;
                }
            }
        } catch (e) {
            console.log('–û—à–∏–±–∫–∞ –ø–∞—Ä—Å–∏–Ω–≥–∞ initData –¥–ª—è –∏–º–µ–Ω–∏:', e);
        }
    }
    
    const savedUserName = localStorage.getItem('telegram_user_name');
    if (savedUserName) {
        console.log('üîÑ –ò—Å–ø–æ–ª—å–∑—É–µ–º —Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω–æ–µ –∏–º—è –∏–∑ localStorage:', savedUserName);
        return savedUserName;
    }
    
    return 'Unknown User';
}

// API —Ñ—É–Ω–∫—Ü–∏–∏
async function apiRequest(endpoint, options = {}) {
    const url = `${CONFIG.API_BASE_URL}${endpoint}`;
    const defaultOptions = {
        headers: {
            'Content-Type': 'application/json',
        },
    };

    const mergedOptions = { ...defaultOptions, ...options };
    
    try {
        const response = await fetch(url, mergedOptions);
        
        if (!response.ok) {
            throw new Error(`HTTP error! status: ${response.status}`);
        }
        
        return await response.json();
    } catch (error) {
        console.error('API request failed:', error);
        throw error;
    }
}

// –ü–æ–ª—É—á–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
async function getUserData() {
    try {
        const userId = getUserId();
        const userName = getUserName();
        currentUserId = userId;
        
        // –ó–∞–≥—Ä—É–∂–∞–µ–º –¥–∞–Ω–Ω—ã–µ —Å —Å–µ—Ä–≤–µ—Ä–∞
        const data = await apiRequest('/api/user/data', {
            method: 'POST',
            body: JSON.stringify({
                user_id: userId,
                telegram_name: userName,
                init_data: tg?.initData || ''
            })
        });
        
        userStars = data.stars_balance || CONFIG.DEFAULT_STAR_BALANCE;
        userInventory = data.inventory || [];
        
        return { stars_balance: userStars, inventory: userInventory };
    } catch (error) {
        console.error('–û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:', error);
        // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∑–Ω–∞—á–µ–Ω–∏—è –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é –ø—Ä–∏ –æ—à–∏–±–∫–µ
        userStars = CONFIG.DEFAULT_STAR_BALANCE;
        userInventory = [];
        currentUserId = getUserId();
        return { stars_balance: userStars, inventory: userInventory };
    }
}

// –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
async function saveUserData() {
    try {
        if (!currentUserId) return;
        
        await apiRequest('/api/user/save', {
            method: 'POST',
            body: JSON.stringify({
                user_id: currentUserId,
                telegram_name: getUserName(),
                stars_balance: userStars,
                inventory: userInventory,
                init_data: tg?.initData || ''
            })
        });
        
        console.log('‚úÖ –î–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã');
    } catch (error) {
        console.error('–û—à–∏–±–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:', error);
    }
}

// –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –ø—Ä–∏–∑–∞
function generatePrize(rarity = 'common') {
    const prizes = CONFIG.PRIZES[rarity] || CONFIG.PRIZES.common;
    const randomIndex = Math.floor(Math.random() * prizes.length);
    const basePrize = prizes[randomIndex];
    
    return {
        ...basePrize,
        id: 'prize_' + Date.now() + '_' + Math.random().toString(36).substr(2, 9),
        timestamp: Date.now()
    };
}

// –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –ø—Ä–∏–∑–∞ –¥–ª—è –∫–µ–π—Å–∞
function generateCasePrize() {
    const probabilities = {
        common: 0.6,    // 60%
        rare: 0.25,     // 25%
        epic: 0.12,     // 12%
        legendary: 0.03 // 3%
    };

    const random = Math.random();
    let cumulativeProbability = 0;
    
    for (const [rarity, probability] of Object.entries(probabilities)) {
        cumulativeProbability += probability;
        if (random <= cumulativeProbability) {
            return generatePrize(rarity);
        }
    }
    
    return generatePrize('common');
}

// –û—Ç–∫—Ä—ã—Ç–∏–µ –∫–µ–π—Å–∞
async function openCase(caseType, price) {
    console.log('üéÅ –û–¢–ö–†–´–¢–ò–ï –ö–ï–ô–°–ê: –ù–∞—á–∏–Ω–∞–µ–º –æ—Ç–∫—Ä—ã—Ç–∏–µ', { caseType, price, userStars });
    
    try {
        if (isOpening) {
            console.log('‚ö†Ô∏è –ö–µ–π—Å —É–∂–µ –æ—Ç–∫—Ä—ã–≤–∞–µ—Ç—Å—è');
            showNotification('–ö–µ–π—Å —É–∂–µ –æ—Ç–∫—Ä—ã–≤–∞–µ—Ç—Å—è', 'warning');
            return;
        }

        if (userStars < price) {
            console.log('‚ùå –ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –∑–≤–µ–∑–¥');
            showNotification('–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –∑–≤–µ–∑–¥', 'error');
            return;
        }

        console.log('‚úÖ –ü—Ä–æ–≤–µ—Ä–∫–∏ –ø—Ä–æ–π–¥–µ–Ω—ã, –Ω–∞—á–∏–Ω–∞–µ–º –æ—Ç–∫—Ä—ã—Ç–∏–µ');
        isOpening = true;
        
        // –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º –ø—Ä–∏–∑ –∑–∞—Ä–∞–Ω–µ–µ
        const prize = generateCasePrize();
        console.log('üéÅ –°–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –ø—Ä–∏–∑:', prize);
        
        // –ó–∞–ø—É—Å–∫–∞–µ–º –∞–Ω–∏–º–∞—Ü–∏—é –∏ –∂–¥–µ–º –µ—ë –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è
        console.log('üé¨ –ó–∞–ø—É—Å–∫–∞–µ–º –∞–Ω–∏–º–∞—Ü–∏—é...');
        const animatedPrize = await showOpeningAnimation(caseType);
        console.log('üé¨ –ê–Ω–∏–º–∞—Ü–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω–∞, —Ä–µ–∑—É–ª—å—Ç–∞—Ç:', animatedPrize);
        
        // –û–±–Ω–æ–≤–ª—è–µ–º –¥–∞–Ω–Ω—ã–µ –ª–æ–∫–∞–ª—å–Ω–æ
        userStars -= price;
        userInventory.push(prize);
        
        // –°–æ—Ö—Ä–∞–Ω—è–µ–º –≤ –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö
        await saveUserData();
        
        // –û–±–Ω–æ–≤–ª—è–µ–º UI
        updateStarsDisplay();
        updateInventoryDisplay();
        
        // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø—Ä–∏–∑
        showPrizeModal(prize);
        
        showNotification('–ö–µ–π—Å —É—Å–ø–µ—à–Ω–æ –æ—Ç–∫—Ä—ã—Ç!', 'success');

    } catch (error) {
        console.error('‚ùå –û—à–∏–±–∫–∞ –æ—Ç–∫—Ä—ã—Ç–∏—è –∫–µ–π—Å–∞:', error);
        showNotification(error.message || '–û—à–∏–±–∫–∞ –æ—Ç–∫—Ä—ã—Ç–∏—è –∫–µ–π—Å–∞', 'error');
    } finally {
        isOpening = false;
        // –ù–µ –∑–∞–∫—Ä—ã–≤–∞–µ–º –∞–Ω–∏–º–∞—Ü–∏—é –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ ‚Äî –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∑–∞–∫—Ä–æ–µ—Ç —á–µ—Ä–µ–∑ –∫–Ω–æ–ø–∫—É ¬´–ù–∞–∑–∞–¥¬ª
    }
}

// –ü–æ–∫—É–ø–∫–∞ –∑–≤–µ–∑–¥
async function buyStars(amount) {
    try {
        if (!tg) {
            showNotification('–§—É–Ω–∫—Ü–∏—è –ø–æ–∫—É–ø–∫–∏ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∞', 'error');
            return;
        }

        // –ó–¥–µ—Å—å –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è —Å Telegram Payments
        showNotification('–§—É–Ω–∫—Ü–∏—è –ø–æ–∫—É–ø–∫–∏ –≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ', 'info');

    } catch (error) {
        console.error('–û—à–∏–±–∫–∞ –ø–æ–∫—É–ø–∫–∏ –∑–≤–µ–∑–¥:', error);
        showNotification('–û—à–∏–±–∫–∞ –ø–æ–∫—É–ø–∫–∏ –∑–≤–µ–∑–¥', 'error');
    }
}

// –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –∑–≤–µ–∑–¥
function updateStarsDisplay() {
    const starsElement = document.getElementById('stars-count');
    if (starsElement) {
        starsElement.textContent = userStars;
    }
}

// –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –∏–Ω–≤–µ–Ω—Ç–∞—Ä—è
function updateInventoryDisplay() {
    const inventoryGrid = document.getElementById('inventory-grid');
    if (!inventoryGrid) return;

    inventoryGrid.innerHTML = '';

    if (userInventory.length === 0) {
        inventoryGrid.innerHTML = '<p class="empty-inventory">–ò–Ω–≤–µ–Ω—Ç–∞—Ä—å –ø—É—Å—Ç</p>';
        return;
    }

    userInventory.forEach(item => {
        const itemElement = createInventoryItem(item);
        inventoryGrid.appendChild(itemElement);
    });
}

// –°–æ–∑–¥–∞–Ω–∏–µ —ç–ª–µ–º–µ–Ω—Ç–∞ –∏–Ω–≤–µ–Ω—Ç–∞—Ä—è
function createInventoryItem(item) {
    const div = document.createElement('div');
    div.className = 'inventory-item';
    div.innerHTML = `
        <div class="item-icon">${getItemIcon(item)}</div>
        <div class="item-name">${item.name}</div>
        <div class="item-rarity ${item.rarity}">${getRarityName(item.rarity)}</div>
    `;
    return div;
}

// –ü–æ–ª—É—á–µ–Ω–∏–µ –∏–∫–æ–Ω–∫–∏ –ø—Ä–µ–¥–º–µ—Ç–∞
function getItemIcon(item) {
    const icons = {
        sticker: 'üìÑ',
        gift: 'üéÅ',
        premium: '‚≠ê',
        stars: 'üí´'
    };
    return icons[item.type] || '‚ùì';
}

// –ü–æ–ª—É—á–µ–Ω–∏–µ –Ω–∞–∑–≤–∞–Ω–∏—è —Ä–µ–¥–∫–æ—Å—Ç–∏
function getRarityName(rarity) {
    const names = {
        common: '–û–±—ã—á–Ω—ã–π',
        rare: '–†–µ–¥–∫–∏–π',
        epic: '–≠–ø–∏—á–µ—Å–∫–∏–π',
        legendary: '–õ–µ–≥–µ–Ω–¥–∞—Ä–Ω—ã–π'
    };
    return names[rarity] || '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ';
}

// –ü–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–µ —Ç–∞–±–æ–≤
function switchTab(tabName) {
    // –°–∫—Ä—ã–≤–∞–µ–º –≤—Å–µ –ø–∞–Ω–µ–ª–∏
    document.querySelectorAll('.tab-panel').forEach(panel => {
        panel.classList.remove('active');
    });

    // –£–±–∏—Ä–∞–µ–º –∞–∫—Ç–∏–≤–Ω—ã–π –∫–ª–∞—Å—Å —Å –∫–Ω–æ–ø–æ–∫
    document.querySelectorAll('.tab-btn').forEach(btn => {
        btn.classList.remove('active');
    });

    // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –Ω—É–∂–Ω—É—é –ø–∞–Ω–µ–ª—å
    const targetPanel = document.getElementById(`${tabName}-tab`);
    const targetBtn = document.querySelector(`[data-tab="${tabName}"]`);

    if (targetPanel) targetPanel.classList.add('active');
    if (targetBtn) targetBtn.classList.add('active');

    currentTab = tabName;

    // –û–±–Ω–æ–≤–ª—è–µ–º –∫–æ–Ω—Ç–µ–Ω—Ç –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç —Ç–∞–±–∞
    if (tabName === 'inventory') {
        updateInventoryDisplay();
    }
}

// –ü–æ–∫–∞–∑ –∞–Ω–∏–º–∞—Ü–∏–∏ –æ—Ç–∫—Ä—ã—Ç–∏—è
function showOpeningAnimation(caseType) {
    console.log('üé¨ –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∞–Ω–∏–º–∞—Ü–∏—é –¥–ª—è –∫–µ–π—Å–∞:', caseType);
    const openingArea = document.getElementById('opening-area');
    if (openingArea) {
        // –ü–µ—Ä–µ—Ö–æ–¥–∏–º –≤ –ø–æ–ª–Ω–æ—ç–∫—Ä–∞–Ω–Ω—ã–π —Ä–µ–∂–∏–º –∞–Ω–∏–º–∞—Ü–∏–∏
        document.body.classList.add('case-opening');
        openingArea.classList.add('fullscreen');
        openingArea.style.display = 'flex';

        // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∫–Ω–æ–ø–∫—É –≤—ã—Ö–æ–¥–∞
        const exitBtn = document.getElementById('exit-fullscreen-btn');
        if (exitBtn) exitBtn.style.display = 'block';

        // –°–∫—Ä–æ–ª–ª–∏–º –∫ –æ–±–ª–∞—Å—Ç–∏ –∞–Ω–∏–º–∞—Ü–∏–∏ (–Ω–∞ –≤—Å—è–∫–∏–π —Å–ª—É—á–∞–π –¥–ª—è –º–æ–±–∏–ª—å–Ω—ã—Ö)
        try { openingArea.scrollIntoView({ behavior: 'smooth', block: 'start' }); } catch (_) {}

        console.log('‚úÖ –û–±–ª–∞—Å—Ç—å –∞–Ω–∏–º–∞—Ü–∏–∏ –ø–æ–∫–∞–∑–∞–Ω–∞ (fullscreen)');
        
        // –ó–∞–ø—É—Å–∫–∞–µ–º –∞–Ω–∏–º–∞—Ü–∏—é
        return new Promise((resolve) => {
            console.log('üöÄ –ó–∞–ø—É—Å–∫–∞–µ–º CS2 –∞–Ω–∏–º–∞—Ü–∏—é...');
            startCaseAnimation(caseType, (prize) => {
                console.log('üéÅ CS2 –∞–Ω–∏–º–∞—Ü–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω–∞, –ø—Ä–∏–∑:', prize);
                resolve(prize);
            });
        });
    }
    console.log('‚ùå –û–±–ª–∞—Å—Ç—å –∞–Ω–∏–º–∞—Ü–∏–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞');
    return Promise.resolve(null);
}

// –°–∫—Ä—ã—Ç–∏–µ –∞–Ω–∏–º–∞—Ü–∏–∏ –æ—Ç–∫—Ä—ã—Ç–∏—è
function hideOpeningAnimation() {
    const openingArea = document.getElementById('opening-area');
    if (openingArea) {
        // –ü—Ä—è—á–µ–º –∫–Ω–æ–ø–∫—É –≤—ã—Ö–æ–¥–∞ –∏ –≤—ã—Ö–æ–¥–∏–º –∏–∑ –ø–æ–ª–Ω–æ—ç–∫—Ä–∞–Ω–Ω–æ–≥–æ —Ä–µ–∂–∏–º–∞
        const exitBtn = document.getElementById('exit-fullscreen-btn');
        if (exitBtn) exitBtn.style.display = 'none';

        openingArea.classList.remove('fullscreen');
        openingArea.style.display = 'none';
    }
    document.body.classList.remove('case-opening');
    
    // –°–±—Ä–∞—Å—ã–≤–∞–µ–º –∞–Ω–∏–º–∞—Ü–∏—é
    resetCaseAnimation();
}

// –ü–æ–∫–∞–∑ –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞ —Å –ø—Ä–∏–∑–æ–º
function showPrizeModal(prize) {
    const modal = document.getElementById('prize-modal');
    if (!modal) return;

    // –ó–∞–ø–æ–ª–Ω—è–µ–º –¥–∞–Ω–Ω—ã–µ –ø—Ä–∏–∑–∞
    const iconElement = document.getElementById('modal-prize-icon');
    const nameElement = document.getElementById('modal-prize-name');
    const descriptionElement = document.getElementById('modal-prize-description');

    if (iconElement) iconElement.textContent = getItemIcon(prize);
    if (nameElement) nameElement.textContent = prize.name;
    if (descriptionElement) descriptionElement.textContent = prize.description || '';

    // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ
    modal.style.display = 'flex';

    // –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –∑–∞–∫—Ä—ã–≤–∞–µ–º —á–µ—Ä–µ–∑ 3 —Å–µ–∫—É–Ω–¥—ã
    setTimeout(() => {
        modal.style.display = 'none';
    }, 3000);
}

// –°–∏—Å—Ç–µ–º–∞ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π
function showNotification(message, type = 'info', duration = 3000) {
    // –°–æ–∑–¥–∞–µ–º –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä –¥–ª—è —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π, –µ—Å–ª–∏ –µ–≥–æ –Ω–µ—Ç
    let container = document.getElementById('notifications-container');
    if (!container) {
        container = document.createElement('div');
        container.id = 'notifications-container';
        container.style.cssText = `
            position: fixed;
            top: 20px;
            right: 20px;
            z-index: 10000;
            pointer-events: none;
        `;
        document.body.appendChild(container);
    }

    // –°–æ–∑–¥–∞–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ
    const notification = document.createElement('div');
    notification.className = `notification notification-${type}`;
    notification.style.cssText = `
        background: ${getNotificationColor(type)};
        color: white;
        padding: 12px 20px;
        border-radius: 8px;
        margin-bottom: 10px;
        box-shadow: 0 4px 12px rgba(0, 0, 0, 0.15);
        transform: translateX(100%);
        transition: transform 0.3s ease;
        pointer-events: auto;
        max-width: 300px;
        word-wrap: break-word;
    `;

    notification.innerHTML = `
        <div style="display: flex; align-items: center; gap: 8px;">
            <span>${getNotificationIcon(type)}</span>
            <span>${message}</span>
        </div>
    `;

    container.appendChild(notification);

    // –ê–Ω–∏–º–∞—Ü–∏—è –ø–æ—è–≤–ª–µ–Ω–∏—è
    setTimeout(() => {
        notification.style.transform = 'translateX(0)';
    }, 10);

    // –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ —É–¥–∞–ª–µ–Ω–∏–µ
    setTimeout(() => {
        notification.style.transform = 'translateX(100%)';
        setTimeout(() => {
            if (notification.parentNode) {
                notification.parentNode.removeChild(notification);
            }
        }, 300);
    }, duration);
}

function getNotificationColor(type) {
    const colors = {
        success: '#10B981',
        error: '#EF4444',
        warning: '#F59E0B',
        info: '#3B82F6'
    };
    return colors[type] || colors.info;
}

function getNotificationIcon(type) {
    const icons = {
        success: '‚úÖ',
        error: '‚ùå',
        warning: '‚ö†Ô∏è',
        info: '‚ÑπÔ∏è'
    };
    return icons[type] || icons.info;
}

// –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤ —Å–æ–±—ã—Ç–∏–π
function setupEventListeners() {
    // –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ —Ç–∞–±–æ–≤
    document.querySelectorAll('.tab-btn').forEach(btn => {
        btn.addEventListener('click', (e) => {
            const tab = e.target.dataset.tab;
            switchTab(tab);
        });
    });

    // –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –∫–µ–π—Å–æ–≤
    document.querySelectorAll('.case-item').forEach(item => {
        console.log('üéØ –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –∫–µ–π—Å–∞:', item.dataset.case);
        item.addEventListener('click', (e) => {
            console.log('üñ±Ô∏è –ö–õ–ò–ö –ü–û –ö–ï–ô–°–£!', e.currentTarget.dataset);
            const caseType = e.currentTarget.dataset.case;
            const price = parseInt(e.currentTarget.dataset.price);
            console.log('üéÅ –í—ã–∑—ã–≤–∞–µ–º openCase —Å –ø–∞—Ä–∞–º–µ—Ç—Ä–∞–º–∏:', { caseType, price });
            openCase(caseType, price);
        });
    });

    // –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –∫–Ω–æ–ø–æ–∫ –ø–æ–∫—É–ø–∫–∏ –∑–≤–µ–∑–¥
    document.querySelectorAll('.buy-btn').forEach(btn => {
        btn.addEventListener('click', (e) => {
            const amount = parseInt(e.target.dataset.amount);
            buyStars(amount);
        });
    });
}

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
async function initApp() {
    try {
        console.log('üöÄ –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è Telegram Mini App...');

        // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è Telegram WebApp
        if (tg) {
            tg.ready();
            tg.expand();
            console.log('‚úÖ Telegram WebApp –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω');
        }

        // –ó–∞–≥—Ä—É–∂–∞–µ–º –¥–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        await getUserData();

        // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è UI
        updateStarsDisplay();
        updateInventoryDisplay();
        switchTab('cases');
        setupEventListeners();

        console.log('‚úÖ –ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ —É—Å–ø–µ—à–Ω–æ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–æ');

    } catch (error) {
        console.error('‚ùå –û—à–∏–±–∫–∞ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏:', error);
        showNotification('–û—à–∏–±–∫–∞ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è', 'error');
    }
}

// –ó–∞–ø—É—Å–∫ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
document.addEventListener('DOMContentLoaded', initApp);

// –í—ã—Ö–æ–¥ –∏–∑ –ø–æ–ª–Ω–æ—ç–∫—Ä–∞–Ω–Ω–æ–≥–æ —Ä–µ–∂–∏–º–∞
function exitFullscreenMode() {
    hideOpeningAnimation();
}

// ===== CS2 –°–¢–ò–õ–¨ –ê–ù–ò–ú–ê–¶–ò–Ø –û–¢–ö–†–´–¢–ò–Ø –ö–ï–ô–°–ê =====

// –ì–ª–æ–±–∞–ª—å–Ω—ã–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –¥–ª—è CS2 –∞–Ω–∏–º–∞—Ü–∏–∏
let cs2Animation = {
    isRunning: false,
    items: [],
    selectedItem: null,
    container: null,
    currentPosition: 0,
    targetPosition: 0,
    animationPhase: 'idle', // idle, spinning, slowing, stopped
    spinSpeed: 0,
    maxSpeed: 50,
    deceleration: 0.95
};

/**
 * –ó–∞–ø—É—Å–∫ CS2 –∞–Ω–∏–º–∞—Ü–∏–∏ –æ—Ç–∫—Ä—ã—Ç–∏—è –∫–µ–π—Å–∞
 * @param {string} caseType - –¢–∏–ø –∫–µ–π—Å–∞
 * @param {Function} onComplete - Callback –ø—Ä–∏ –∑–∞–≤–µ—Ä—à–µ–Ω–∏–∏
 */
async function startCaseAnimation(caseType, onComplete) {
    console.log('üéÆ CS2 –ê–Ω–∏–º–∞—Ü–∏—è: –ù–∞—á–∏–Ω–∞–µ–º –¥–ª—è –∫–µ–π—Å–∞', caseType);
    
    if (cs2Animation.isRunning) {
        console.log('‚ö†Ô∏è CS2 –ê–Ω–∏–º–∞—Ü–∏—è —É–∂–µ –∑–∞–ø—É—â–µ–Ω–∞');
        return;
    }

    cs2Animation.isRunning = true;
    cs2Animation.container = document.getElementById('prize-strip');
    
    console.log('üéØ CS2 –ê–Ω–∏–º–∞—Ü–∏—è: –ö–æ–Ω—Ç–µ–π–Ω–µ—Ä –Ω–∞–π–¥–µ–Ω?', !!cs2Animation.container);
    
    if (!cs2Animation.container) {
        console.log('‚ùå CS2 –ê–Ω–∏–º–∞—Ü–∏—è: –ö–æ–Ω—Ç–µ–π–Ω–µ—Ä prize-strip –Ω–µ –Ω–∞–π–¥–µ–Ω');
        cs2Animation.isRunning = false;
        return;
    }

    try {
        console.log('üéÅ CS2 –ê–Ω–∏–º–∞—Ü–∏—è: –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º –ø—Ä–µ–¥–º–µ—Ç—ã...');
        // –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º –ø—Ä–µ–¥–º–µ—Ç—ã –¥–ª—è –∞–Ω–∏–º–∞—Ü–∏–∏
        generateCS2Items(caseType);
        console.log('‚úÖ CS2 –ê–Ω–∏–º–∞—Ü–∏—è: –ü—Ä–µ–¥–º–µ—Ç—ã —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω—ã, –≤—Å–µ–≥–æ:', cs2Animation.items.length);
        
        console.log('üé¨ CS2 –ê–Ω–∏–º–∞—Ü–∏—è: –ó–∞–ø—É—Å–∫–∞–µ–º –∞–Ω–∏–º–∞—Ü–∏—é...');
        // –ó–∞–ø—É—Å–∫–∞–µ–º –∞–Ω–∏–º–∞—Ü–∏—é
        await runCS2Animation();
        console.log('‚úÖ CS2 –ê–Ω–∏–º–∞—Ü–∏—è: –ê–Ω–∏–º–∞—Ü–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω–∞');
        
        // –í—ã–∑—ã–≤–∞–µ–º callback
        if (onComplete) {
            console.log('üéÅ CS2 –ê–Ω–∏–º–∞—Ü–∏—è: –í—ã–∑—ã–≤–∞–µ–º callback —Å –ø—Ä–∏–∑–æ–º:', cs2Animation.selectedItem);
            onComplete(cs2Animation.selectedItem);
        }

    } catch (error) {
        console.error('‚ùå CS2 –ê–Ω–∏–º–∞—Ü–∏—è: –û—à–∏–±–∫–∞:', error);
    } finally {
        cs2Animation.isRunning = false;
    }
}

/**
 * –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –ø—Ä–µ–¥–º–µ—Ç–æ–≤ –¥–ª—è CS2 –∞–Ω–∏–º–∞—Ü–∏–∏
 * @param {string} caseType - –¢–∏–ø –∫–µ–π—Å–∞
 */
function generateCS2Items(caseType) {
    console.log('üéÅ CS2 –ì–µ–Ω–µ—Ä–∞—Ü–∏—è: –ù–∞—á–∏–Ω–∞–µ–º –≥–µ–Ω–µ—Ä–∞—Ü–∏—é –ø—Ä–µ–¥–º–µ—Ç–æ–≤');
    cs2Animation.items = [];
    
    // –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º –º–Ω–æ–≥–æ –ø—Ä–µ–¥–º–µ—Ç–æ–≤ (–∫–∞–∫ –≤ CS2)
    const totalItems = 100;
    console.log('üéÅ CS2 –ì–µ–Ω–µ—Ä–∞—Ü–∏—è: –°–æ–∑–¥–∞–µ–º', totalItems, '–ø—Ä–µ–¥–º–µ—Ç–æ–≤');
    
    for (let i = 0; i < totalItems; i++) {
        const item = generateCasePrize();
        cs2Animation.items.push({
            ...item,
            id: `item_${i}`,
            position: i * 200 // 200px –º–µ–∂–¥—É –ø—Ä–µ–¥–º–µ—Ç–∞–º–∏
        });
    }

    // –í—ã–±–∏—Ä–∞–µ–º —Å–ª—É—á–∞–π–Ω—ã–π –ø—Ä–µ–¥–º–µ—Ç –∏–∑ –ø–æ—Å–ª–µ–¥–Ω–µ–π —Ç—Ä–µ—Ç–∏
    const startIndex = Math.floor(totalItems * 0.7);
    const endIndex = totalItems - 1;
    const randomIndex = Math.floor(Math.random() * (endIndex - startIndex + 1)) + startIndex;
    cs2Animation.selectedItem = cs2Animation.items[randomIndex];
    
    console.log('üéØ CS2 –ì–µ–Ω–µ—Ä–∞—Ü–∏—è: –í—ã–±—Ä–∞–Ω –ø—Ä–µ–¥–º–µ—Ç —Å –∏–Ω–¥–µ–∫—Å–æ–º', randomIndex, ':', cs2Animation.selectedItem);

    // –°–æ–∑–¥–∞–µ–º DOM —ç–ª–µ–º–µ–Ω—Ç—ã
    console.log('üé® CS2 –ì–µ–Ω–µ—Ä–∞—Ü–∏—è: –°–æ–∑–¥–∞–µ–º DOM —ç–ª–µ–º–µ–Ω—Ç—ã...');
    createCS2Items();
    
    // –í—ã—á–∏—Å–ª—è–µ–º —Ü–µ–ª–µ–≤—É—é –ø–æ–∑–∏—Ü–∏—é –ü–û–°–õ–ï —Å–æ–∑–¥–∞–Ω–∏—è —ç–ª–µ–º–µ–Ω—Ç–æ–≤ –∏ –∫–æ–≥–¥–∞ –æ–±–ª–∞—Å—Ç—å –≤–∏–¥–Ω–∞
    // –ò—Å–ø–æ–ª—å–∑—É–µ–º requestAnimationFrame –¥–ª—è –≥–∞—Ä–∞–Ω—Ç–∏–∏, —á—Ç–æ DOM –æ–±–Ω–æ–≤–ª–µ–Ω
    requestAnimationFrame(() => {
        const containerEl = document.querySelector('.prize-strip-container');
        let containerWidth = 0;
        
        if (containerEl) {
            // –ü—Ä–æ–±—É–µ–º —Ä–∞–∑–Ω—ã–µ —Å–ø–æ—Å–æ–±—ã –ø–æ–ª—É—á–∏—Ç—å —à–∏—Ä–∏–Ω—É
            containerWidth = containerEl.offsetWidth || containerEl.clientWidth || containerEl.getBoundingClientRect().width;
            
            // –ï—Å–ª–∏ –≤—Å–µ –µ—â–µ 0, –ø—Ä–æ–±—É–µ–º –ø–æ–ª—É—á–∏—Ç—å —á–µ—Ä–µ–∑ –≤—ã—á–∏—Å–ª–µ–Ω–Ω—ã–µ —Å—Ç–∏–ª–∏ –∏–ª–∏ viewport
            if (containerWidth === 0 || isNaN(containerWidth)) {
                const styles = window.getComputedStyle(containerEl);
                containerWidth = parseFloat(styles.width) || parseFloat(styles.maxWidth);
                if (!containerWidth || isNaN(containerWidth)) {
                    containerWidth = window.innerWidth || document.documentElement.clientWidth || 800;
                }
            }
        } else {
            // Fallback –Ω–∞ viewport
            containerWidth = window.innerWidth || document.documentElement.clientWidth || 800;
        }
        
        // –ì–∞—Ä–∞–Ω—Ç–∏—Ä—É–µ–º –º–∏–Ω–∏–º–∞–ª—å–Ω—É—é —à–∏—Ä–∏–Ω—É
        if (!containerWidth || isNaN(containerWidth) || containerWidth === 0) {
            containerWidth = window.innerWidth || document.documentElement.clientWidth || 800;
            console.log('‚ö†Ô∏è CS2 –ì–µ–Ω–µ—Ä–∞—Ü–∏—è: containerWidth –±—ã–ª 0, –∏—Å–ø–æ–ª—å–∑—É–µ–º viewport:', containerWidth);
        }
        
        const itemWidth = 100;
        const itemGap = 15;
        const itemSpacing = itemWidth + itemGap; // 180px
        
        // –¶–µ–Ω—Ç—Ä–∏—Ä—É–µ–º –≤—ã–±—Ä–∞–Ω–Ω—ã–π –ø—Ä–µ–¥–º–µ—Ç: –µ–≥–æ —Ü–µ–Ω—Ç—Ä –¥–æ–ª–∂–µ–Ω –ø–æ–ø–∞—Å—Ç—å –≤ —Ü–µ–Ω—Ç—Ä –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞
        const centerOffset = containerWidth / 2 - itemWidth / 2;
        cs2Animation.targetPosition = -(randomIndex * itemSpacing - centerOffset);
        
        console.log('üìç CS2 –ì–µ–Ω–µ—Ä–∞—Ü–∏—è: –¶–µ–ª–µ–≤–∞—è –ø–æ–∑–∏—Ü–∏—è:', cs2Animation.targetPosition);
        console.log('üìç CS2 –ì–µ–Ω–µ—Ä–∞—Ü–∏—è: containerWidth:', containerWidth, 'itemSpacing:', itemSpacing, 'randomIndex:', randomIndex);
    });
}

/**
 * –°–æ–∑–¥–∞–Ω–∏–µ DOM —ç–ª–µ–º–µ–Ω—Ç–æ–≤ –¥–ª—è CS2 –∞–Ω–∏–º–∞—Ü–∏–∏
 */
function createCS2Items() {
    console.log('üé® CS2 DOM: –û—á–∏—â–∞–µ–º –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä');
    cs2Animation.container.innerHTML = '';
    
    // –î–æ–±–∞–≤–ª—è–µ–º –∫–ª–∞—Å—Å –¥–ª—è CS2 –∞–Ω–∏–º–∞—Ü–∏–∏
    cs2Animation.container.classList.add('cs2-animation');
    
    // –í—ã—á–∏—Å–ª—è–µ–º —Ä–∞–∑–º–µ—Ä—ã (—É–º–µ–Ω—å—à–µ–Ω—ã –¥–ª—è –∫–æ–º–ø–∞–∫—Ç–Ω–æ—Å—Ç–∏)
    const itemWidth = 100;
    const itemGap = 15;
    const itemSpacing = itemWidth + itemGap;
    const totalWidth = cs2Animation.items.length * itemSpacing;
    
    // –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä
    cs2Animation.container.style.display = 'flex';
    cs2Animation.container.style.alignItems = 'center';
    cs2Animation.container.style.width = `${totalWidth}px`;
    cs2Animation.container.style.height = '100%';
    cs2Animation.container.style.position = 'absolute';
    cs2Animation.container.style.left = '0';
    cs2Animation.container.style.top = '0';
    // –ò—Å–ø–æ–ª—å–∑—É–µ–º setProperty –¥–ª—è –ø–µ—Ä–µ–∫—Ä—ã—Ç–∏—è CSS —Å !important
    cs2Animation.container.style.setProperty('transform', 'translateX(0px) translateZ(0)', 'important');
    cs2Animation.container.style.setProperty('-webkit-transform', 'translateX(0px) translateZ(0)', 'important');
    cs2Animation.container.style.setProperty('transition', '', 'important');
    cs2Animation.container.style.setProperty('-webkit-transition', '', 'important');
    cs2Animation.container.style.setProperty('will-change', 'transform', 'important');
    cs2Animation.container.style.zIndex = '9998';
    cs2Animation.container.style.overflow = 'visible';
    cs2Animation.container.style.visibility = 'visible';
    cs2Animation.container.style.opacity = '1';
    cs2Animation.container.style.backfaceVisibility = 'hidden';
    cs2Animation.container.style.webkitBackfaceVisibility = 'hidden';
    
    console.log('üé® CS2 DOM: –°–æ–∑–¥–∞–µ–º', cs2Animation.items.length, '—ç–ª–µ–º–µ–Ω—Ç–æ–≤');
    
    cs2Animation.items.forEach((item, index) => {
        const itemElement = document.createElement('div');
        itemElement.className = `cs2-item flex-item ${item.rarity}`;
        itemElement.setAttribute('data-index', index);
        itemElement.innerHTML = `
            <div class="cs2-item-icon" style="font-size: 1.5rem; margin-bottom: 4px;">${getCS2ItemIcon(item)}</div>
            <div class="cs2-item-name" style="font-weight: 700; text-align: center; font-size: 0.7rem;">${item.name}</div>
            <div class="cs2-item-rarity" style="font-size: 0.6rem; opacity: 0.9; text-align: center;">${getRarityName(item.rarity)}</div>
        `;
        
        // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Å—Ç–∏–ª–∏ –¥–ª—è —ç–ª–µ–º–µ–Ω—Ç–∞
        itemElement.style.width = `${itemWidth}px`;
        itemElement.style.height = `${itemWidth}px`;
        itemElement.style.minWidth = `${itemWidth}px`;
        itemElement.style.minHeight = `${itemWidth}px`;
        itemElement.style.display = 'flex';
        itemElement.style.flexDirection = 'column';
        itemElement.style.alignItems = 'center';
        itemElement.style.justifyContent = 'center';
        itemElement.style.marginRight = `${itemGap}px`;
        itemElement.style.marginLeft = '0';
        itemElement.style.background = 'linear-gradient(135deg, #1a1a1a 0%, #2d2d2d 100%)';
        itemElement.style.border = '3px solid #444';
        itemElement.style.borderRadius = '8px';
        itemElement.style.color = '#fff';
        itemElement.style.opacity = '1';
        itemElement.style.visibility = 'visible';
        itemElement.style.position = 'relative';
        itemElement.style.flexShrink = '0';
        itemElement.style.boxShadow = '0 4px 20px rgba(0, 0, 0, 0.4)';
        itemElement.style.pointerEvents = 'none'; // –ß—Ç–æ–±—ã –Ω–µ –º–µ—à–∞–ª–∏ –∫–ª–∏–∫–∞–º
        
        // –¶–≤–µ—Ç–∞ –ø–æ —Ä–µ–¥–∫–æ—Å—Ç–∏
        const rarityColors = {
            common: '#b0b0b0',
            rare: '#4b69ff',
            epic: '#8847ff',
            legendary: '#ffd700'
        };
        if (rarityColors[item.rarity]) {
            itemElement.style.borderColor = rarityColors[item.rarity];
        }
        
        cs2Animation.container.appendChild(itemElement);
    });
    
    console.log('‚úÖ CS2 DOM: –°–æ–∑–¥–∞–Ω–æ', cs2Animation.container.children.length, '—ç–ª–µ–º–µ–Ω—Ç–æ–≤');
    console.log('‚úÖ CS2 DOM: –û–±—â–∞—è —à–∏—Ä–∏–Ω–∞ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞:', totalWidth, 'px');
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –≤–∏–¥–∏–º–æ—Å—Ç—å —ç–ª–µ–º–µ–Ω—Ç–æ–≤
    const firstElement = cs2Animation.container.children[0];
    const lastElement = cs2Animation.container.children[cs2Animation.container.children.length - 1];
    if (firstElement) {
        console.log('‚úÖ CS2 DOM: –ü–µ—Ä–≤—ã–π —ç–ª–µ–º–µ–Ω—Ç –Ω–∞–π–¥–µ–Ω, —Å—Ç–∏–ª–∏:', {
            display: firstElement.style.display,
            opacity: firstElement.style.opacity,
            visibility: firstElement.style.visibility,
            width: firstElement.style.width,
            height: firstElement.style.height
        });
        const rect = firstElement.getBoundingClientRect();
        console.log('‚úÖ CS2 DOM: –ü–æ–∑–∏—Ü–∏—è –ø–µ—Ä–≤–æ–≥–æ —ç–ª–µ–º–µ–Ω—Ç–∞:', {
            left: rect.left,
            top: rect.top,
            width: rect.width,
            height: rect.height,
            visible: rect.width > 0 && rect.height > 0
        });
    }
}

/**
 * –ü–æ–ª—É—á–µ–Ω–∏–µ –∏–∫–æ–Ω–∫–∏ –ø—Ä–µ–¥–º–µ—Ç–∞ –¥–ª—è CS2
 * @param {Object} item - –ü—Ä–µ–¥–º–µ—Ç
 * @returns {string} - –ò–∫–æ–Ω–∫–∞
 */
function getCS2ItemIcon(item) {
    const icons = {
        sticker: 'üìÑ',
        gift: 'üéÅ',
        premium: '‚≠ê',
        stars: 'üí´'
    };
    return icons[item.type] || '‚ùì';
}

/**
 * –ó–∞–ø—É—Å–∫ CS2 –∞–Ω–∏–º–∞—Ü–∏–∏
 */
async function runCS2Animation() {
    console.log('üé¨ CS2 –ê–Ω–∏–º–∞—Ü–∏—è: –ó–∞–ø—É—Å–∫–∞–µ–º –∞–Ω–∏–º–∞—Ü–∏—é –ø—Ä–æ–∫—Ä—É—Ç–∫–∏');
    console.log('üé¨ CS2 –ê–Ω–∏–º–∞—Ü–∏—è: –ù–∞—á–∞–ª—å–Ω–∞—è —à–∏—Ä–∏–Ω–∞ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞:', cs2Animation.container?.style?.width);
    console.log('üé¨ CS2 –ê–Ω–∏–º–∞—Ü–∏—è: –ö–æ–ª-–≤–æ —ç–ª–µ–º–µ–Ω—Ç–æ–≤ –≤ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–µ:', cs2Animation.container?.children?.length);
    
    // –ñ–¥–µ–º, –ø–æ–∫–∞ —Ü–µ–ª–µ–≤–∞—è –ø–æ–∑–∏—Ü–∏—è –±—É–¥–µ—Ç –≤—ã—á–∏—Å–ª–µ–Ω–∞
    // –ï—Å–ª–∏ –æ–Ω–∞ –µ—â–µ –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞, –≤—ã—á–∏—Å–ª—è–µ–º –µ–µ —Å–µ–π—á–∞—Å
    if (cs2Animation.targetPosition === 0 || cs2Animation.targetPosition === undefined) {
        console.log('‚ö†Ô∏è CS2 –ê–Ω–∏–º–∞—Ü–∏—è: –¶–µ–ª–µ–≤–∞—è –ø–æ–∑–∏—Ü–∏—è –µ—â–µ –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞, –≤—ã—á–∏—Å–ª—è–µ–º...');
        const containerEl = document.querySelector('.prize-strip-container');
        let containerWidth = 800;
        
        if (containerEl) {
            containerWidth = containerEl.offsetWidth || containerEl.clientWidth || containerEl.getBoundingClientRect().width;
            if (!containerWidth || isNaN(containerWidth) || containerWidth === 0) {
                containerWidth = window.innerWidth || document.documentElement.clientWidth || 800;
            }
        } else {
            containerWidth = window.innerWidth || document.documentElement.clientWidth || 800;
        }
        
        const itemWidth = 100;
        const itemGap = 15;
        const itemSpacing = itemWidth + itemGap;
        const selectedIndex = cs2Animation.items.findIndex(item => item.id === cs2Animation.selectedItem?.id);
        
        if (selectedIndex !== -1) {
            const centerOffset = containerWidth / 2 - itemWidth / 2;
            cs2Animation.targetPosition = -(selectedIndex * itemSpacing - centerOffset);
            console.log('üìç CS2 –ê–Ω–∏–º–∞—Ü–∏—è: –ü–µ—Ä–µ—Å—á–∏—Ç–∞–ª–∏ —Ü–µ–ª–µ–≤—É—é –ø–æ–∑–∏—Ü–∏—é:', cs2Animation.targetPosition);
        }
    }
    
    console.log('üé¨ CS2 –ê–Ω–∏–º–∞—Ü–∏—è: –¶–µ–ª–µ–≤–∞—è –ø–æ–∑–∏—Ü–∏—è:', cs2Animation.targetPosition);
    
    // –í—ã—á–∏—Å–ª—è–µ–º –Ω–∞—á–∞–ª—å–Ω—É—é –ø–æ–∑–∏—Ü–∏—é —Ç–∞–∫, —á—Ç–æ–±—ã –Ω–µ—Å–∫–æ–ª—å–∫–æ —ç–ª–µ–º–µ–Ω—Ç–æ–≤ –±—ã–ª–∏ –≤–∏–¥–Ω—ã
    const containerEl = document.querySelector('.prize-strip-container');
    let containerWidth = window.innerWidth || document.documentElement.clientWidth || 800;
    if (containerEl) {
        const width = containerEl.offsetWidth || containerEl.clientWidth || containerEl.getBoundingClientRect().width;
        if (width && !isNaN(width) && width > 0) {
            containerWidth = width;
        }
    }
    
    const itemWidth = 160;
    const itemGap = 20;
    const itemSpacing = itemWidth + itemGap;
    
    // –ù–∞—á–∞–ª—å–Ω–∞—è –ø–æ–∑–∏—Ü–∏—è: –Ω–∞—á–∏–Ω–∞–µ–º —Å –ø–æ–∑–∏—Ü–∏–∏ 0, —á—Ç–æ–±—ã –ø–µ—Ä–≤—ã–µ —ç–ª–µ–º–µ–Ω—Ç—ã –±—ã–ª–∏ –≤–∏–¥–Ω—ã
    // –ü–µ—Ä–≤—ã–π —ç–ª–µ–º–µ–Ω—Ç (–∏–Ω–¥–µ–∫—Å 0) –±—É–¥–µ—Ç —Å–ª–µ–≤–∞, —Å–ª–µ–¥—É—é—â–∏–µ —ç–ª–µ–º–µ–Ω—Ç—ã –±—É–¥—É—Ç –≤–∏–¥–Ω—ã —Å–ø—Ä–∞–≤–∞
    const initialOffset = 0;
    
    cs2Animation.currentPosition = initialOffset;
    // –ü—Ä–∏–º–µ–Ω—è–µ–º transform —Å –ø—Ä–µ—Ñ–∏–∫—Å–∞–º–∏ –∏ !important, —á—Ç–æ–±—ã –ø–µ—Ä–µ–∫—Ä—ã—Ç—å CSS
    const initialTransform = `translateX(${initialOffset}px) translateZ(0)`;
    cs2Animation.container.style.setProperty('transform', initialTransform, 'important');
    cs2Animation.container.style.setProperty('-webkit-transform', initialTransform, 'important');
    cs2Animation.container.style.setProperty('transition', 'none', 'important');
    cs2Animation.container.style.setProperty('-webkit-transition', 'none', 'important');
    cs2Animation.container.style.setProperty('will-change', 'transform', 'important');
    
    console.log('üé¨ CS2 –ê–Ω–∏–º–∞—Ü–∏—è: –ù–∞—á–∞–ª—å–Ω–∞—è –ø–æ–∑–∏—Ü–∏—è —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞:', initialOffset);
    console.log('üé¨ CS2 –ê–Ω–∏–º–∞—Ü–∏—è: containerWidth:', containerWidth);
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –≤–∏–¥–∏–º–æ—Å—Ç—å —ç–ª–µ–º–µ–Ω—Ç–æ–≤ –ø–æ—Å–ª–µ —É—Å—Ç–∞–Ω–æ–≤–∫–∏ –ø–æ–∑–∏—Ü–∏–∏
    const firstElement = cs2Animation.container.children[0];
    const secondElement = cs2Animation.container.children[1];
    const thirdElement = cs2Animation.container.children[2];
    
    if (firstElement) {
        const rect = firstElement.getBoundingClientRect();
        const containerRect = containerEl?.getBoundingClientRect();
        console.log('üîç CS2 –ê–Ω–∏–º–∞—Ü–∏—è: –ü–µ—Ä–≤—ã–π —ç–ª–µ–º–µ–Ω—Ç:', {
            visible: rect.width > 0 && rect.height > 0,
            left: rect.left,
            top: rect.top,
            width: rect.width,
            height: rect.height,
            containerLeft: containerRect?.left,
            containerWidth: containerRect?.width,
            isInView: rect.left >= (containerRect?.left || 0) && rect.left < ((containerRect?.left || 0) + (containerRect?.width || 0))
        });
    }
    
    // –ù–µ–±–æ–ª—å—à–∞—è –∑–∞–¥–µ—Ä–∂–∫–∞ –¥–ª—è –≤–∏–∑—É–∞–ª–∏–∑–∞—Ü–∏–∏ –Ω–∞—á–∞–ª—å–Ω–æ–π –ø–æ–∑–∏—Ü–∏–∏ –∏ –ø—Ä–æ–≤–µ—Ä–∫–∏ –≤–∏–¥–∏–º–æ—Å—Ç–∏
    await new Promise(resolve => setTimeout(resolve, 200));
    
    return new Promise((resolve) => {
        let animationId;
        let startTime = Date.now();
        
        // –§–∞–∑–∞ 1: –ë—ã—Å—Ç—Ä–æ–µ –≤—Ä–∞—â–µ–Ω–∏–µ (2 —Å–µ–∫—É–Ω–¥—ã)
        console.log('‚ö° CS2 –ê–Ω–∏–º–∞—Ü–∏—è: –§–∞–∑–∞ 1 - –ë—ã—Å—Ç—Ä–æ–µ –≤—Ä–∞—â–µ–Ω–∏–µ (2 —Å–µ–∫)');
        cs2Animation.animationPhase = 'spinning';
        cs2Animation.spinSpeed = cs2Animation.maxSpeed;
        
        function animate() {
            const currentTime = Date.now();
            const elapsed = currentTime - startTime;
            
            if (cs2Animation.animationPhase === 'spinning') {
                // –ë—ã—Å—Ç—Ä–æ–µ –≤—Ä–∞—â–µ–Ω–∏–µ 2 —Å–µ–∫—É–Ω–¥—ã
                if (elapsed < 2000) {
                    cs2Animation.currentPosition -= cs2Animation.spinSpeed;
                    // –ü—Ä–∏–º–µ–Ω—è–µ–º transform —Å –ø—Ä–µ—Ñ–∏–∫—Å–∞–º–∏ –∏ !important, —á—Ç–æ–±—ã –ø–µ—Ä–µ–∫—Ä—ã—Ç—å CSS
                    const transformValue = `translateX(${cs2Animation.currentPosition}px) translateZ(0)`;
                    cs2Animation.container.style.setProperty('transform', transformValue, 'important');
                    cs2Animation.container.style.setProperty('-webkit-transform', transformValue, 'important');
                    cs2Animation.container.style.setProperty('transition', 'none', 'important');
                    cs2Animation.container.style.setProperty('-webkit-transition', 'none', 'important');
                    cs2Animation.container.style.setProperty('will-change', 'transform', 'important');
                    
                    animationId = requestAnimationFrame(animate);
                } else {
                    // –ü–µ—Ä–µ—Ö–æ–¥–∏–º –∫ –∑–∞–º–µ–¥–ª–µ–Ω–∏—é
                    console.log('üêå CS2 –ê–Ω–∏–º–∞—Ü–∏—è: –§–∞–∑–∞ 2 - –ó–∞–º–µ–¥–ª–µ–Ω–∏–µ (1.5 —Å–µ–∫)');
                    cs2Animation.animationPhase = 'slowing';
                    startTime = Date.now();
                    animationId = requestAnimationFrame(animate);
                }
            } else if (cs2Animation.animationPhase === 'slowing') {
                // –ó–∞–º–µ–¥–ª–µ–Ω–∏–µ 1.5 —Å–µ–∫—É–Ω–¥—ã
                if (elapsed < 1500) {
                    cs2Animation.spinSpeed *= cs2Animation.deceleration;
                    if (cs2Animation.spinSpeed < 1) {
                        cs2Animation.spinSpeed = 1;
                    }
                    cs2Animation.currentPosition -= cs2Animation.spinSpeed;
                    // –ü—Ä–∏–º–µ–Ω—è–µ–º transform —Å –ø—Ä–µ—Ñ–∏–∫—Å–∞–º–∏ –∏ !important, —á—Ç–æ–±—ã –ø–µ—Ä–µ–∫—Ä—ã—Ç—å CSS
                    const transformValue = `translateX(${cs2Animation.currentPosition}px) translateZ(0)`;
                    cs2Animation.container.style.setProperty('transform', transformValue, 'important');
                    cs2Animation.container.style.setProperty('-webkit-transform', transformValue, 'important');
                    cs2Animation.container.style.setProperty('transition', 'none', 'important');
                    cs2Animation.container.style.setProperty('-webkit-transition', 'none', 'important');
                    cs2Animation.container.style.setProperty('will-change', 'transform', 'important');
                    
                    animationId = requestAnimationFrame(animate);
                } else {
                    // –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º—Å—è
                    console.log('üõë CS2 –ê–Ω–∏–º–∞—Ü–∏—è: –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º—Å—è –Ω–∞ –ø–æ–∑–∏—Ü–∏–∏:', cs2Animation.currentPosition);
                    cancelAnimationFrame(animationId);
                    stopCS2Animation();
                    resolve();
                }
            }
        }
        
        // –ó–∞–ø—É—Å–∫–∞–µ–º –∞–Ω–∏–º–∞—Ü–∏—é
        animationId = requestAnimationFrame(animate);
    });
}

/**
 * –û—Å—Ç–∞–Ω–æ–≤–∫–∞ CS2 –∞–Ω–∏–º–∞—Ü–∏–∏
 */
function stopCS2Animation() {
    console.log('üõë CS2 –û—Å—Ç–∞–Ω–æ–≤–∫–∞: –ü–µ—Ä–µ—Ö–æ–¥–∏–º –∫ —Ñ–∏–Ω–∞–ª—å–Ω–æ–π –ø–æ–∑–∏—Ü–∏–∏');
    cs2Animation.animationPhase = 'stopped';
    
    // –ü–ª–∞–≤–Ω–æ –ø–µ—Ä–µ–º–µ—â–∞–µ–º –∫ —Ü–µ–ª–µ–≤–æ–º—É –ø—Ä–µ–¥–º–µ—Ç—É
    const finalTransform = `translateX(${cs2Animation.targetPosition}px) translateZ(0)`;
    const finalTransition = 'transform 0.8s cubic-bezier(0.25, 0.46, 0.45, 0.94)';
    cs2Animation.container.style.setProperty('transition', finalTransition, 'important');
    cs2Animation.container.style.setProperty('-webkit-transition', finalTransition, 'important');
    cs2Animation.container.style.setProperty('transform', finalTransform, 'important');
    cs2Animation.container.style.setProperty('-webkit-transform', finalTransform, 'important');
    cs2Animation.currentPosition = cs2Animation.targetPosition;
    
    console.log('üìç CS2 –û—Å—Ç–∞–Ω–æ–≤–∫–∞: –ü–µ—Ä–µ–º–µ—â–∞–µ–º—Å—è –∫ –ø–æ–∑–∏—Ü–∏–∏', cs2Animation.targetPosition);
    
    // –ü–æ–¥—Å–≤–µ—á–∏–≤–∞–µ–º –≤—ã–±—Ä–∞–Ω–Ω—ã–π –ø—Ä–µ–¥–º–µ—Ç –∏ –ø–æ–∫–∞–∑—ã–≤–∞–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç
    setTimeout(() => {
        console.log('‚ú® CS2 –û—Å—Ç–∞–Ω–æ–≤–∫–∞: –ü–æ–¥—Å–≤–µ—á–∏–≤–∞–µ–º –≤—ã–±—Ä–∞–Ω–Ω—ã–π –ø—Ä–µ–¥–º–µ—Ç');
        highlightCS2SelectedItem();
        showCS2Result();
    }, 800);
}

/**
 * –ü–æ–¥—Å–≤–µ—Ç–∫–∞ –≤—ã–±—Ä–∞–Ω–Ω–æ–≥–æ –ø—Ä–µ–¥–º–µ—Ç–∞
 */
function highlightCS2SelectedItem() {
    const items = cs2Animation.container.querySelectorAll('.cs2-item');
    items.forEach(item => item.classList.remove('selected'));
    
    // –ù–∞—Ö–æ–¥–∏–º –≤—ã–±—Ä–∞–Ω–Ω—ã–π –ø—Ä–µ–¥–º–µ—Ç –ø–æ –µ–≥–æ –∏–Ω–¥–µ–∫—Å—É –≤ –º–∞—Å—Å–∏–≤–µ
    if (cs2Animation.selectedItem) {
        const selectedIndex = cs2Animation.items.findIndex(item => item.id === cs2Animation.selectedItem.id);
        if (selectedIndex !== -1 && items[selectedIndex]) {
            items[selectedIndex].classList.add('selected');
            console.log('‚ú® CS2 –ü–æ–¥—Å–≤–µ—Ç–∫–∞: –í—ã–±—Ä–∞–Ω –ø—Ä–µ–¥–º–µ—Ç —Å –∏–Ω–¥–µ–∫—Å–æ–º', selectedIndex);
        }
    }
}

/**
 * –ü–æ–∫–∞–∑ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞ CS2
 */
function showCS2Result() {
    // –ê–∫—Ç–∏–≤–∏—Ä—É–µ–º —ç—Ñ—Ñ–µ–∫—Ç—ã
    activateCS2Effects();
    
    // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç
    showCS2PrizeReveal();
}

/**
 * –ê–∫—Ç–∏–≤–∞—Ü–∏—è CS2 —ç—Ñ—Ñ–µ–∫—Ç–æ–≤
 */
function activateCS2Effects() {
    // –õ—É—á–∏ —Å–≤–µ—Ç–∞
    const lightRays = document.querySelector('.light-rays');
    if (lightRays) lightRays.classList.add('active');

    // –í–∑—Ä—ã–≤
    const explosion = document.getElementById('explosion-effect');
    if (explosion) explosion.classList.add('active');

    // –í—Å–ø—ã—à–∫–∞
    const flash = document.getElementById('light-flash');
    if (flash) flash.classList.add('active');
}

/**
 * –ü–æ–∫–∞–∑ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞ CS2
 */
function showCS2PrizeReveal() {
    const prizeReveal = document.getElementById('prize-reveal');
    if (!prizeReveal || !cs2Animation.selectedItem) return;

    // –ó–∞–ø–æ–ª–Ω—è–µ–º –¥–∞–Ω–Ω—ã–µ
    const iconElement = document.getElementById('prize-icon');
    const nameElement = document.getElementById('prize-name');
    const descriptionElement = document.getElementById('prize-description');
    const rarityElement = document.getElementById('prize-rarity');

    if (iconElement) iconElement.textContent = getCS2ItemIcon(cs2Animation.selectedItem);
    if (nameElement) nameElement.textContent = cs2Animation.selectedItem.name;
    if (descriptionElement) descriptionElement.textContent = cs2Animation.selectedItem.description || '';
    if (rarityElement) {
        rarityElement.textContent = getRarityName(cs2Animation.selectedItem.rarity);
        rarityElement.className = `prize-rarity ${cs2Animation.selectedItem.rarity}`;
    }

    // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∞–Ω–∏–º–∞—Ü–∏—é
    prizeReveal.classList.add('show');
}

// –¥—É–±–ª–∏–∫–∞—Ç getRarityName —É–¥–∞–ª–µ–Ω

/**
 * –°–±—Ä–æ—Å CS2 –∞–Ω–∏–º–∞—Ü–∏–∏
 */
function resetCaseAnimation() {
    cs2Animation.isRunning = false;
    cs2Animation.currentPosition = 0;
    cs2Animation.targetPosition = 0;
    cs2Animation.items = [];
    cs2Animation.selectedItem = null;
    cs2Animation.animationPhase = 'idle';
    cs2Animation.spinSpeed = 0;

    if (cs2Animation.container) {
        cs2Animation.container.style.transition = '';
        cs2Animation.container.style.transform = '';
        cs2Animation.container.innerHTML = '';
    }

    // –°–∫—Ä—ã–≤–∞–µ–º —ç—Ñ—Ñ–µ–∫—Ç—ã
    const lightRays = document.querySelector('.light-rays');
    if (lightRays) lightRays.classList.remove('active');

    const explosion = document.getElementById('explosion-effect');
    if (explosion) explosion.classList.remove('active');

    const flash = document.getElementById('light-flash');
    if (flash) flash.classList.remove('active');

    // –°–∫—Ä—ã–≤–∞–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç
    const prizeReveal = document.getElementById('prize-reveal');
    if (prizeReveal) prizeReveal.classList.remove('show');
}

// –≠–∫—Å–ø–æ—Ä—Ç —Ñ—É–Ω–∫—Ü–∏–π –¥–ª—è –≥–ª–æ–±–∞–ª—å–Ω–æ–≥–æ –¥–æ—Å—Ç—É–ø–∞
window.openCase = openCase;
window.buyStars = buyStars;
window.switchTab = switchTab;
window.exitFullscreenMode = exitFullscreenMode;
